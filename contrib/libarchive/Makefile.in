# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.14 2020/05/04 20:18:19 cvsuser Exp $
# libarchive makefile
#
#
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@

# Common flags

ARFLAGS=	rcv
XFLAGS=
COPT=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
LDEBUG=		@LDEBUG@
CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@
ifeq ("mingw32","@build_os@")
CEXTRA+=	-D__USE_MINGW_ANSI_STDIO
endif
ifeq ("win32","@build_os@")
CEXTRA+=	-D_CRT_SECURE_NO_WARNINGS
endif
CEXTRA+=	-D_WIN32 -D_WIN32_WINNT=0X601
CFLAGS=		$(CDEBUG) $(COPT) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CNFLAGS=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
YFLAGS=		-d
LDFLAGS=	$(LDEBUG) @LDFLAGS@
LDLIBS=		-L$(D_LIB) @LIBLZMA@ @LIBS@ @LIBM@ @EXTRALIBS@

RMFLAGS=	-f

# Directories

D_BIN=		$(ROOT)/bin
D_INC=		$(ROOT)/include
D_OBJ=		$(ROOT)/objects/libarchive
D_LIB=		$(ROOT)/lib

############################################################

# Targets

ARCHIVELIB=	$(D_LIB)/$(LP)archive_static$(A)
ARCHIVEDLL=	$(D_LIB)/$(LP)archive.la

VERSION=	3.3.3
VERSIONSPEC=	$(subst .,:,$(VERSION))
PACKED=		libarchive-$(VERSION).gr.tgz
ARCHIVESRC=	./libarchive-$(VERSION)/libarchive
VPATH=		$(ARCHIVESRC)

LIBOBJS=\
	$(D_OBJ)/archive_acl$(O)				\
	$(D_OBJ)/archive_check_magic$(O)			\
	$(D_OBJ)/archive_cryptor$(O)				\
	$(D_OBJ)/archive_entry$(O)				\
	$(D_OBJ)/archive_entry_copy_bhfi$(O)			\
	$(D_OBJ)/archive_entry_copy_stat$(O)			\
	$(D_OBJ)/archive_entry_link_resolver$(O)		\
	$(D_OBJ)/archive_entry_sparse$(O)			\
	$(D_OBJ)/archive_entry_stat$(O)				\
	$(D_OBJ)/archive_entry_strmode$(O)			\
	$(D_OBJ)/archive_entry_xattr$(O)			\
	$(D_OBJ)/archive_getdate$(O)				\
	$(D_OBJ)/archive_match$(O)				\
	$(D_OBJ)/archive_options$(O)				\
	$(D_OBJ)/archive_pathmatch$(O)				\
	$(D_OBJ)/archive_ppmd7$(O)				\
	$(D_OBJ)/archive_rb$(O)					\
	$(D_OBJ)/archive_read$(O)				\
	$(D_OBJ)/archive_read_data_into_fd$(O)			\
	$(D_OBJ)/archive_read_disk_set_standard_lookup$(O)	\
	$(D_OBJ)/archive_read_disk_windows$(O)			\
	$(D_OBJ)/archive_read_extract$(O)			\
	$(D_OBJ)/archive_read_open_fd$(O)			\
	$(D_OBJ)/archive_read_open_file$(O)			\
	$(D_OBJ)/archive_read_open_filename$(O)			\
	$(D_OBJ)/archive_read_open_memory$(O)			\
	$(D_OBJ)/archive_read_set_options$(O)			\
	$(D_OBJ)/archive_read_support_filter_all$(O)		\
	$(D_OBJ)/archive_read_support_filter_bzip2$(O)		\
	$(D_OBJ)/archive_read_support_filter_compress$(O)	\
	$(D_OBJ)/archive_read_support_filter_gzip$(O)		\
	$(D_OBJ)/archive_read_support_filter_none$(O)		\
	$(D_OBJ)/archive_read_support_filter_program$(O)	\
	$(D_OBJ)/archive_read_support_filter_rpm$(O)		\
	$(D_OBJ)/archive_read_support_filter_uu$(O)		\
	$(D_OBJ)/archive_read_support_filter_xz$(O)		\
	$(D_OBJ)/archive_read_support_format_7zip$(O)		\
	$(D_OBJ)/archive_read_support_format_all$(O)		\
	$(D_OBJ)/archive_read_support_format_ar$(O)		\
	$(D_OBJ)/archive_read_support_format_by_code$(O)	\
	$(D_OBJ)/archive_read_support_format_cab$(O)		\
	$(D_OBJ)/archive_read_support_format_cpio$(O)		\
	$(D_OBJ)/archive_read_support_format_empty$(O)		\
	$(D_OBJ)/archive_read_support_format_iso9660$(O)	\
	$(D_OBJ)/archive_read_support_format_lha$(O)		\
	$(D_OBJ)/archive_read_support_format_mtree$(O)		\
	$(D_OBJ)/archive_read_support_format_rar$(O)		\
	$(D_OBJ)/archive_read_support_format_raw$(O)		\
	$(D_OBJ)/archive_read_support_format_tar$(O)		\
	$(D_OBJ)/archive_read_support_format_xar$(O)		\
	$(D_OBJ)/archive_read_support_format_zip$(O)		\
	$(D_OBJ)/archive_string$(O)				\
	$(D_OBJ)/archive_string_sprintf$(O)			\
	$(D_OBJ)/archive_util$(O) 				\
	$(D_OBJ)/archive_virtual$(O)				\
	$(D_OBJ)/archive_write$(O)				\
	$(D_OBJ)/archive_write_add_filter$(O)			\
	$(D_OBJ)/archive_write_add_filter_bzip2$(O)		\
	$(D_OBJ)/archive_write_add_filter_compress$(O)		\
	$(D_OBJ)/archive_write_add_filter_gzip$(O)		\
	$(D_OBJ)/archive_write_add_filter_none$(O)		\
	$(D_OBJ)/archive_write_add_filter_program$(O)		\
	$(D_OBJ)/archive_write_add_filter_xz$(O)		\
	$(D_OBJ)/archive_write_disk_set_standard_lookup$(O)	\
	$(D_OBJ)/archive_write_disk_windows$(O)			\
	$(D_OBJ)/archive_write_open_fd$(O)			\
	$(D_OBJ)/archive_write_open_file$(O)			\
	$(D_OBJ)/archive_write_open_filename$(O)		\
	$(D_OBJ)/archive_write_open_memory$(O)			\
	$(D_OBJ)/archive_write_set_format$(O)			\
	$(D_OBJ)/archive_write_set_format_7zip$(O)		\
	$(D_OBJ)/archive_write_set_format_ar$(O)		\
	$(D_OBJ)/archive_write_set_format_by_name$(O)		\
	$(D_OBJ)/archive_write_set_format_cpio$(O)		\
	$(D_OBJ)/archive_write_set_format_cpio_newc$(O)		\
	$(D_OBJ)/archive_write_set_format_gnutar$(O)		\
	$(D_OBJ)/archive_write_set_format_iso9660$(O)		\
	$(D_OBJ)/archive_write_set_format_mtree$(O)		\
	$(D_OBJ)/archive_write_set_format_pax$(O)		\
	$(D_OBJ)/archive_write_set_format_shar$(O)		\
	$(D_OBJ)/archive_write_set_format_ustar$(O)		\
	$(D_OBJ)/archive_write_set_format_xar$(O)		\
	$(D_OBJ)/archive_write_set_format_zip$(O)		\
	$(D_OBJ)/archive_write_set_options$(O)

#3.1.2
LIBOBJS+=\
	$(D_OBJ)/archive_read_support_filter_lrzip$(O)		\
	$(D_OBJ)/archive_read_support_filter_lzop$(O)		\
	$(D_OBJ)/archive_read_support_filter_grzip$(O)		\
	$(D_OBJ)/archive_write_add_filter_grzip$(O)		\
	$(D_OBJ)/archive_write_add_filter_lrzip$(O)		\
	$(D_OBJ)/archive_write_add_filter_uuencode$(O)		\
	$(D_OBJ)/archive_write_set_format_v7tar$(O)		\
	$(D_OBJ)/archive_cmdline$(O)

#3.3.3
LIBOBJS+=\
	$(D_OBJ)/archive_digest$(O)				\
	$(D_OBJ)/archive_disk_acl_darwin$(O)			\
	$(D_OBJ)/archive_disk_acl_freebsd$(O)			\
	$(D_OBJ)/archive_disk_acl_linux$(O)			\
	$(D_OBJ)/archive_disk_acl_sunos$(O)			\
	$(D_OBJ)/archive_hmac$(O)				\
	$(D_OBJ)/archive_pack_dev$(O)				\
	$(D_OBJ)/archive_random$(O)				\
	$(D_OBJ)/archive_read_add_passphrase$(O)		\
	$(D_OBJ)/archive_read_extract2$(O)			\
	$(D_OBJ)/archive_read_support_filter_lz4$(O)		\
	$(D_OBJ)/archive_read_support_filter_zstd$(O)		\
	$(D_OBJ)/archive_read_support_format_warc$(O)		\
	$(D_OBJ)/archive_version_details$(O)			\
	$(D_OBJ)/archive_write_add_filter_lz4$(O)		\
	$(D_OBJ)/archive_write_add_filter_zstd$(O)		\
	$(D_OBJ)/archive_write_set_format_filter_by_ext$(O)	\
	$(D_OBJ)/archive_write_set_format_raw$(O)		\
	$(D_OBJ)/archive_write_set_format_warc$(O)		\
	$(D_OBJ)/archive_write_set_passphrase$(O)		\
	$(D_OBJ)/xxhash$(O)

ifeq ("yes","@ISWIN32@")
LIBOBJS+=\
	$(D_OBJ)/archive_windows$(O)				\
	$(D_OBJ)/filter_fork_windows$(O)

#special 3.3.3
# XXX:  crypt32.dll dynamic loader ...
LIBOBJS+=\
	$(D_OBJ)/w32_crypto$(O)
else
LIBOBJS+=\
	$(D_OBJ)/archive_read_disk_posix$(O)			\
	$(D_OBJ)/archive_write_disk_posix$(O)			\
	$(D_OBJ)/archive_read_disk_entry_from_file$(O)		\
	$(D_OBJ)/filter_fork_posix$(O)
endif

DLLOBJS=	\
	$(subst $(O),.lo,$(LIBOBJS))

OBJS=		$(LIBOBJS) $(DLLOBJS)
LIBS=		$(ARCHIVELIB) $(ARCHIVEDLL)
TSKS=

# Rules

all:			checkversion source unpacked
unpacked:		object $(LIBS) $(TSKS) installinc

# gmake 4.0; file operator required
verneeded :=	4.0
verreported :=	$(filter $(verneeded),$(firstword $(sort $(MAKE_VERSION) $(verneeded))))

.PHONY:			checkversion
checkversion:
ifeq ($(verreported),)
		$(error Unsupported Make version. \
 The build system does not work properly with GNU Make $(MAKE_VERSION), GNU Make ${verneeded} or above required.)
endif

$(ARCHIVELIB):		CEXTRA += -I$(ARCHIVESRC) -DLIBARCHIVE_STATIC
$(ARCHIVELIB):		$(LIBOBJS)
		$(RM) $(RMFLAGS) $@ >/dev/null 2>&1
		$(file >libtool.cmd) $(foreach O,$^,$(file >>libtool.cmd, $O))
		$(AR) $(ARFLAGS) $@ @libtool.cmd
		@$(RM) libtool.cmd
		$(RANLIB) $@

$(ARCHIVEDLL):		CEXTRA += -I$(ARCHIVESRC) -D__LIBARCHIVE_BUILD -DZLIB_DLL
$(ARCHIVEDLL):		$(DLLOBJS)
		$(file >libtool.cmd) $(foreach O,$^,$(file >>libtool.cmd, $O))
		$(LIBTOOL) --mode=link $(CC) -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) -o $@ @libtool.cmd libz$(A) libbz2$(A) $(LDLIBS)
		@$(RM) libtool.cmd

source:			.unpacked.$(VERSION)
		$(MAKE) unpacked

.unpacked.$(VERSION):	$(PACKED)
		@echo "do not delete, managed file" > $@
		@echo "unpacking source $(PACKED)"
		@gzip -c -d $(PACKED) | tar -xvf -

.PHONY:		object
object:			$(D_OBJ)/.created

.PHONY:		installinc
installinc:		../include/.created
		@echo publishing headers ...
		-cp $(ARCHIVESRC)/archive.h ../include
		-cp $(ARCHIVESRC)/archive_entry.h ../include

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

clean:
		-@$(RM) $(RMFLAGS) $(TSKS) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(LIBTOOL) --mode=clean $(RM) $(DLLOBJS) >/dev/null 2>&1
		-@$(RM) $(LIBOBJS) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%$(O):		%.cpp
		$(CXX) $(CXXFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.cpp
		$(LIBTOOL) --mode=compile $(CXX) $(CXXFLAGS) -o $@ -c $<

#end
