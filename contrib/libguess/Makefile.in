# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.7 2020/06/18 20:35:15 cvsuser Exp $
# libguess makefile
#
#
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/libguess
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@
ifeq ("yes","@ISWIN32@")
CEXTRA+=	-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE
endif

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

GUESSLIB=	$(D_LIB)/$(LP)guess_static$(A)
GUESSDLL=	$(D_LIB)/$(LP)guess.la

VERSION=	1.1
VERSIONSPEC=	$(subst .,:,$(VERSION))
VPATH=		. ./libguess-1.1

LIBOBJS=\
	$(D_OBJ)/libguess$(O)			\
	$(D_OBJ)/guess_impl$(O)			\
	$(D_OBJ)/dfa$(O)

DLLOBJS=\
	$(subst $(O),.lo,$(LIBOBJS))
ifeq ("yes","@ISWIN32@")
DLLOBJS+=\
	$(D_OBJ)/dllmain.lo
endif

OBJS=		$(LIBOBJS) $(DLLOBJS)
LIBS=		$(GUESSLIB) $(GUESSDLL)


#########################################################################################
# Rules

.PHONY:			build release debug
build:			directories $(LIBS) installinc

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

.PHONY:		directories
directories:		$(D_OBJ)/.created $(D_LIB)/.created

$(GUESSLIB):		CEXTRA += -D__LIBGUESS_BUILD -DLIBGUESS_STATIC
$(GUESSLIB):		$(LIBOBJS)
		$(RM) $(RMFLAGS) $@ >/dev/null 2>&1
		$(AR) $(ARFLAGS) $@ $^
		$(RANLIB) $@

$(GUESSDLL):		CEXTRA += -D__LIBGUESS_BUILD -DLIBGUESS_DYNAMIC
$(GUESSDLL):		$(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $^ -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(LDLIBS)

.PHONY:		installinc
installinc:		../include/.created
		@echo publishing headers ...
		-cp libguess.h ../include

.PHONY:		clean
clean:
		@echo $(BUILD_TYPE) clean
		-@$(RM) $(RMFLAGS) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(LIBTOOL) --mode=clean $(RM) $(DLLOBJS) >/dev/null 2>&1
		-@$(RM) $(LIBOBJS) >/dev/null 2>&1

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -o $@ -c $<

#end
