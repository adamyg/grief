#!/usr/bin/perl -w
# -*- mode: perl; -*-
# $Id: version.pl,v 1.1 2022/06/11 14:44:04 cvsuser Exp $
# hunspell version
#
# Copyright Adam Young 2022
# All rights reserved.
#

use strict;
use warnings 'all';
use Getopt::Long;
use POSIX qw(strftime asctime);

my $output  = "version.h";
my $prefix  = "";
my $version = undef;
my $builddate = undef;
my $help    = 0;

Usage() if (0 == GetOptions(
		'output=s'      => \$output,
		'prefix=s'      => \$prefix,
		'version=s'     => \$version,
		'date=i'        => \$builddate,
		'help'          => \$help)
			|| $help);

die "missing version number\n"
	if (! $version);

$builddate = strftime('%Y%m%d', localtime)
	if (! $builddate);

Generate();

sub
Generate	#()
{
	open(FILE, ">${output}") or
		die "cannot create <${output}> : $!\n";

	my ($version1, $version2, $version3, $version4) =
		split(/\./, $version);

	my $timestamp = asctime(localtime);
	chomp($timestamp);

	$version2 = 0 if (! $version2);
	$version3 = 0 if (! $version3);

	print FILE <<"EOT";
// Auto-generated by Makefile ${timestamp}
#define ${prefix}VERSION "${version}"
#define ${prefix}VERSION_MAJOR ${version1}
#define ${prefix}VERSION_MINOR ${version2}
#define ${prefix}VERSION_REVISION ${version3}
#define ${prefix}BUILD_DATE "${builddate}"
EOT
	close(FILE);
}


sub
Usage		# ([message])
{
	print "\nversion.pl @_\n\n" if (@_);
	print <<EOU;

Usage: perl version.pl [options]

Options:
    --version <version>     Package version.
    --prefix <prefix>       Identifier prefix (optional).
    --date <date>           Build date (optionaL).

EOU
	exit 3;
}

1;

#end

