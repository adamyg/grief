# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.4 2025/02/07 03:03:20 cvsuser Exp $
# byacc makefile.
#
# License:
#
#    Berkeley Yacc is distributed with no warranty whatever.  The author
# and any other contributors take no responsibility for the consequences of
# its use.
#
#    Berkeley Yacc is in the public domain.  The data structures and algorithms
# used in Berkeley Yacc are all either taken from documents available to the
# general public or are inventions of the author.  Anyone may freely distribute
# source or binary forms of Berkeley Yacc whether unchanged or modified.
# Distributers may charge whatever fees they can obtain for Berkeley Yacc.
# Programs generated by Berkeley Yacc may be distributed freely.
#
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
E=
O=		.o
H=		.h

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
MV=		@MV@
RM=		@RM@
CP=		@CP@
HAVE_BISON=	1
YACC=		@YACC@
LEX=		@LEX@
LIBTOOL=	@LIBTOOL@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/obj@TOOLCHAINEXT@/$(BUILD_TYPE)/byacc
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

ifeq ("gcc","@CC@")
XFLAGS+=\
	-Wno-unused-but-set-variable \
	-Wno-implicit-fallthrough \
	-Wno-return-type
endif

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

VERSION=	20240109
BYACCSRC=	./byacc-$(VERSION)
PACKED=		byacc-$(VERSION).tgz
VPATH=		$(BYACCSRC) ./compat

TSKS=\
	$(D_BIN)/byacc$(E) \
	$(D_BIN)/btyacc$(E)

COMMON_CSOURCE=\
	closure.c \
	error.c \
	graph.c \
	lalr.c \
	lr0.c \
	main.c \
	mkpar.c \
	mstring.c \
	output.c \
	reader.c \
	symtab.c \
	verbose.c \
	warshall.c \
	compat_mktemp.c

BYACC_CSOURCE=\
	$(COMMON_CSOURCE) \
	yaccpar.c

BTYACC_CSOURCE=\
	$(COMMON_CSOURCE) \
	btyaccpar.c

BYACC_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(BYACC_CSOURCE)))
BTYACC_OBJS=	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(BTYACC_CSOURCE)))

CLEANOBJS=	$(BYACC_OBJS) $(BTYACC_OBJS)
CLEANFILES=


#########################################################################################
# Rules

.PHONY:			build release debug
build:			source unpacked
unpacked:		directories $(TSKS)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

$(D_BIN)/byacc$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/byacc$(E):	$(BYACC_OBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(BYACC_OBJS) $(LDLIBS) @LDMAPFILE@

$(D_BIN)/btyacc$(E):	MAPFILE=$(basename $@).map
$(D_BIN)/btyacc$(E):	$(BTYACC_OBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(BTYACC_OBJS) $(LDLIBS) @LDMAPFILE@

source:			.unpacked.$(VERSION)
		$(MAKE) unpacked

.unpacked.$(VERSION):	$(PACKED)
		@echo "do not delete, managed file" > $@
		@echo "unpacking source $(PACKED)"
		@gzip -c -d $(PACKED) | tar -xvf -

directories:		$(D_OBJ)/.created

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not delete" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(RM) $(RMFLAGS) $(CLEANOBJS) $(CLEANFILES) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

#end
