# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.10 2022/05/27 01:48:40 cvsuser Exp $
# libbz2 makefile
#
#
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@
RC=		@RC@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/libbz2
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
ifeq ("gcc","@CC@")
CWARN=		$(filter-out -Wshadow -Wmissing-prototypes -Wsign-compare -Wimplicit-fallthrough, @CWARN@) -Wno-sign-compare -Wno-implicit-fallthrough -Wno-unused-parameter
else
CWARN=		@CWARN@
endif
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@
ifeq ("yes","@ISWIN32@")
CEXTRA+=	-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE
endif

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

BZ2LIB=		$(D_LIB)/$(LP)bz2_static$(A)
BZ2DLL=		$(D_LIB)/$(LP)bz2.la

VERSION=	1.0.6
VERSIONSPEC=	$(subst .,:,$(VERSION))
BZ2PACKED=	bzip2-1.0.6.gr.tgz
BZ2SRC=		./bzip2-1.0.6
VPATH=		$(BZ2SRC)

LIBOBJS=\
	$(D_OBJ)/blocksort$(O)		\
	$(D_OBJ)/huffman$(O)		\
	$(D_OBJ)/crctable$(O)		\
	$(D_OBJ)/randtable$(O)		\
	$(D_OBJ)/compress$(O)		\
	$(D_OBJ)/decompress$(O)		\
	$(D_OBJ)/bzlib$(O)		\
	\
	$(D_OBJ)/libbzip2$(O)

DLLOBJS=\
	$(subst $(O),.lo,$(LIBOBJS))

ifeq ("yes","@ISWIN32@")
ifeq ("mingw32","@build_os@")
DLLOBJS+=	$(D_OBJ)/libbz2_res.o
else
DLLOBJS+=	$(D_OBJ)/libbz2.res
endif
endif

OBJS=		$(LIBOBJS) $(DLLOBJS)
LIBS=		$(BZ2LIB) $(BZ2DLL)
TSKS=


#########################################################################################
# Rules

.PHONY:			build release debug
build:			source unpacked
unpacked:		object $(LIBS) $(TSKS) installinc

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

CEXTRA+=	-I$(BZ2SRC)

$(BZ2LIB):		CEXTRA += -DLIBBZIP2_STATIC -D__LIBBZIP2_BUILD
$(BZ2LIB):		$(LIBOBJS)
		$(RM) $(RMFLAGS) $@ >/dev/null 2>&1
		$(AR) $(ARFLAGS) $@ $^
		$(RANLIB) $@

$(BZ2DLL):		CEXTRA += -DLIBBZIP2_DYNAMIC -D__LIBBZIP2_BUILD
ifeq ("yes","@ISWIN32@")
$(BZ2DLL):		BZ2DEF = -export-symbols libbz2_win32.def
endif
$(BZ2DLL):		MAPFILE=$(basename $@).map
$(BZ2DLL):		$(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(BZ2DEF) $^ $(LDLIBS) @LDMAPFILE@

source:			.unpacked.$(VERSION)
		$(MAKE) unpacked

.unpacked.$(VERSION):	$(BZ2PACKED)
		@echo "do not delete, managed file" > $@
		@echo "unpacking source $BZ2PACKED"
		@gzip -c -d $(BZ2PACKED) | tar -xvf -

.PHONY:		object
object:			$(D_OBJ)/.created

.PHONY:		installinc
installinc:		../include/.created
		@echo publishing headers ...
		-cp $(BZ2SRC)/bzlib.h ../include

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(LIBS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(LIBTOOL) --mode=clean $(RM) $(DLLOBJS) >/dev/null 2>&1
		-@$(RM) $(LIBOBJS) >/dev/null 2>&1

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.res:		%.rc
		$(RC) -Fo $@ $<

$(D_OBJ)/%_res.o:	%.rc
		$(RC) -o $@ $<

#end
