name: "Windows builds"
on: [push]

#https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: 'gr'
  MAINTAINER: 'https://github.com/adamyg'
  HOMEPAGE: 'https://github.com/adamyg/grief'
  DESC: 'GriefEdit -- console editor.'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
           name: "Windows Latest MSVCx86",
           os: windows-latest,
           toolchain: vc2022,
           toollabel: vs170,
           package: win32-vs22,
           macros: macros
          }
        - {
           name: "Windows Latest MinGWx64",
           os: windows-latest,
           toolchain: mingw64,
           toollabel: mingw64,
           package: win32-w64,
           macros: macros.x64
          }
        - {
           name: "Windows Latest OWC",
           os: windows-latest,
           toolchain: owc20,
           toollabel: owc20,
           package: win32-owc,
           macros: macros
          }

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive

    - name: MSVCx86 setup
      uses: ilammy/msvc-dev-cmd@v1.13.0
      if: contains(matrix.config.name, 'MSVCx86')
      with:
        arch: x86

    - name: MinGWx64 setup
      if: contains(matrix.config.name, 'MinGWx64')
      shell: cmd
      run: |
        c:\msys64\usr\bin\pacman --noconfirm -S base-devel
        c:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-x86_64-gcc
        c:\msys64\usr\bin\pacman --noconfirm -S mingw-w64-i686-gcc

    - name: OpenWatcom setup
      uses: open-watcom/setup-watcom@v0
      if: contains(matrix.config.name, 'OWC')
      with:
        version: "2.0"
        location: "C:\\Watcom"

    - name: Windows, extra
      run: |
        @if NOT "${{ matrix.config.toolchain }}"=="mingw64" c:\msys64\usr\bin\pacman --noconfirm -S bison
        c:\msys64\usr\bin\pacman --noconfirm -S zip

    - name: Windows, generate
      if: startsWith(matrix.config.name, 'Windows')
      shell: cmd
      run: |
        @if "${{ matrix.config.toolchain }}"=="mingw32" set PATH=c:\msys64\mingw32\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="mingw64" set PATH=c:\msys64\mingw64\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="owc20"   call .\support\owc20setenv.bat C:\Watcom
        @if "${{ matrix.config.toolchain }}"=="owc19"   call .\support\owc19setenv.bat C:\Watcom
        @set PERL=c:/Strawberry/perl/bin/perl
        c:/Strawberry/perl/bin/perl makelib.pl --perlpath=c:/Strawberry/perl/bin ^
                --busybox=./win32/busybox --wget=./win32/wget ^
                --bison=c:/msys64/usr/bin/bison --flex=./bin.${{ matrix.config.toollabel }}/release/flex ^
                        "${{ matrix.config.toolchain }}"

    - name: Windows, build
      if: startsWith(matrix.config.name, 'Windows')
      shell: cmd
      run: |
        @if "${{ matrix.config.toolchain }}"=="mingw32" set PATH=c:\msys64\mingw32\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="mingw64" set PATH=c:\msys64\mingw64\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="owc20"   call .\support\owc20setenv.bat C:\Watcom
        @if "${{ matrix.config.toolchain }}"=="owc19"   call .\support\owc19setenv.bat C:\Watcom
        @set PERL=c:/Strawberry/perl/bin/perl
        .\win32\gmake-42 release contrib
        .\win32\gmake-42 release

    - name: Windows, unit-test
      if: startsWith(matrix.config.name, 'Windows')
      shell: cmd
      run: |
        @if "${{ matrix.config.toolchain }}"=="mingw32" set PATH=c:\msys64\mingw32\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="mingw64" set PATH=c:\msys64\mingw64\bin;%PATH%
        @if "${{ matrix.config.toolchain }}"=="owc20"   call .\support\owc20setenv.bat C:\Watcom
        @if "${{ matrix.config.toolchain }}"=="owc19"   call .\support\owc19setenv.bat C:\Watcom
        @set PERL=c:/Strawberry/perl/bin/perl
        .\win32\gmake-42 release unittest
        c:\msys64\usr\bin\zip pkg-${{ matrix.config.package }}-${{ github.run_number }}.zip ^
                ./bin.${{ matrix.config.toollabel }}/release/* ./${{ matrix.config.macros }}/* ./help/*

    - name: Windows, package
      if: startsWith(matrix.config.name, 'Windows')
      uses: actions/upload-artifact@v4
      with:
        name: pkg-${{ matrix.config.package }}
        path: |
          pkg-${{ matrix.config.package }}-${{ github.run_number }}.zip

    - name: Windows, installer
      if: startsWith(matrix.config.name, 'Windows')
      shell: cmd
      run: |
        choco install innosetup --version=5.6.1 --force
        @rem .\win32\gmake-42 release package
        "%programfiles(x86)%\Inno Setup 5\iscc" ".\win32\gr-inno-setup.iss"

    - name: Windows, release
      if: startsWith(matrix.config.name, 'Windows')
      uses: softprops/action-gh-release@v2
      with:
        files: ./win32/gr-*-setup.exe
        draft: true

#end

