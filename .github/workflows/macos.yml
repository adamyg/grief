name: "MacOS builds"
on: [push]

#https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
           name: "MacOS Latest GCC",
           os: macos-latest,
           toollabel: gcc,
           package: macos-gcc
          }

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive

    - name: MacOS, setup
      if: startsWith(matrix.config.name, 'MacOS Latest')
      shell: bash
      run: |
        brew install pkg-config
        brew install ncurses
        brew link ncurses
        brew install enchant
        brew install libspelling
        brew install hunspell
        brew install libarchive
        brew install wget

    - name: MacOS, generate
      if: startsWith(matrix.config.name, 'MacOS Latest')
      shell: bash
      run: |
        export CPATH=$(brew --prefix libarchive)/include:/usr/local/include:$CPATH
        export CPPPATH=$(brew --prefix libarchive)/include:/usr/local/include:$CPATH
        export LIBRARY_PATH=$(brew --prefix libarchive)/lib:/usr/local/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$(brew --prefix libarchive)/lib:/usr/local/lib:$LD_LIBRARY_PATH
        chmod +x configure
        ./support/config_withncurses

    - name: MacOS, compile
      if: startsWith(matrix.config.name, 'MacOS Latest')
      shell: bash
      run: |
        export CPATH=$(brew --prefix libarchive)/include:/usr/local/include:$CPATH
        export CPPPATH=$(brew --prefix libarchive)/include:/usr/local/include:$CPATH
        export LIBRARY_PATH=$(brew --prefix libarchive)/lib:/usr/local/lib:$LIBRARY_PATH
        export LD_LIBRARY_PATH=$(brew --prefix libarchive)/lib:/usr/local/lib:$LD_LIBRARY_PATH
        make release
        tar -cvf pkg-${{ matrix.config.package }}-${{ github.run_number }}.tar \
                bin.${{ matrix.config.toollabel }}/release/* macros/* help/* macsrc/*

    - name: MacOS, unit-test
      if: startsWith(matrix.config.name, 'MacOS Latest')
      shell: bash
      run: |
        make release unittest

    - name: Package
      uses: actions/upload-artifact@v4
      with:
        name: package-${{ matrix.config.package }}
        path: |
          pkg-${{ matrix.config.package }}-${{ github.run_number }}.tar

#end

