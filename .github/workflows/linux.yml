name: "Linux builds"
on: [push]

#https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  APP_NAME: 'gr'
  MAINTAINER: 'https://github.com/adamyg'
  HOMEPAGE: 'https://github.com/adamyg/grief'
  DESC: 'GriefEdit -- console editor.'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
           name: "Ubuntu Latest GCC",
           os: ubuntu-latest,
           toollabel: gcc,
           package: ubuntu-gcc
          }

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Snapshot, generate
      shell: bash
      run: |
        mkdir .snapshot
        tar --exclude-vcs --exclude='./.snapshot' --exclude='./win32' --exclude='./contrib' --exclude='./support/*.bat' --exclude='./defunct' -cf .snapshot/source-snapshot.tar .
        tar --exclude-vcs -cf .snapshot/contrib-snapshot.tar ./contrib

    - name: Snapshot, publish source
      uses: actions/upload-artifact@v4
      with:
        name: source-snapshot.tar
        path: .snapshot/source-snapshot.tar
        compression-level: 9

    - name: Snapshot, publish contrib
      uses: actions/upload-artifact@v4
      with:
        name: contrib-snapshot.tar
        path: .snapshot/contrib-snapshot.tar
        compression-level: 9

    - name: Checkout submodules
      run: |
        git submodule update --init --recursive

    - name: Ubuntu, setup
      shell: bash
      run: |
        sudo add-apt-repository universe
        sudo apt-get install -y libncurses-dev
        sudo apt-get install -y libenchant-2-dev
        sudo apt-get install -y libaspell-dev
        sudo apt-get install -y libhunspell-dev
        sudo apt-get install -y libenca-dev
        sudo apt-get install -y libexplain-dev
        sudo apt-get install -y libarchive-dev

        ## 24/10: removed
        ##  legacy:  sudo apt-get install -y libncursesw5-dev
        ##  missing: sudo apt-get install -y libguess-dev

    - name: Ubuntu, generate
      shell: bash
      run: |
        chmod +x configure
        ./support/config_withncursesw

    - name: Ubuntu, build
      shell: bash
      run: |
        make release prepare_deb
        echo "$(cat ./.PKGLABEL)" >> $GITHUB_ENV

    - name: Ubuntu, unit-test
      shell: bash
      run: |
        make release unittest
        
    - name: Ubuntu, tarball
      shell: bash
      run: |
        tar -czvf pkg-${{ matrix.config.package }}-${{ github.run_number }}.tar.gz \
                bin.${{ matrix.config.toollabel }}/release/* macros/* help/* macsrc/*
        
    - name: Ubuntu, artifacts
      uses: softprops/action-gh-release@v2
      with:
        files: pkg-${{ matrix.config.package }}-${{ github.run_number }}.tar.gz
        draft: true

    # https://github.com/marketplace/actions/build-deb-action
    - name: Ubuntu, deb
      id: deb
      uses: jiro4989/build-deb-action@v3.1.0
      with:
        package: ${{ env.APP_NAME }}
        package_root: .debpkg
        maintainer: ${{ env.MAINTAINER }}
        version: ${{ env.VERSION }}
        arch: 'amd64'
        depends: 'libhunspell-dev, libarchive13, libncurses6'
        desc: '${{ env.DESC }}'
        homepage: '${{ env.HOMEPAGE }}'

    - name: Ubuntu, upload
      if: startsWith(matrix.config.name, 'Ubuntu Latest')
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.deb.outputs.file_name }}
        path: |
          ./${{ steps.deb.outputs.file_name }}

#end

