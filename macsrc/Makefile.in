# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.29 2025/07/31 17:58:58 cvsuser Exp $
# GRIEF macro library makefile.
#
#
# Copyright (c) 1998 - 2025, Adam Young.
# All rights reserved.
#
# This file is part of the GRIEF Editor.
#
# The GRIEF Editor is free software: you can redistribute it
# and/or modify it under the terms of the GRIEF Editor License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The GRIEF Editor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

SHELL=		/bin/sh
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
# MSVC Run-time suffix
RTSUFFIX=d
endif

# Directories

D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)

GRUNCH=		$(D_BIN)/grunch

ifeq ("@ISWIN64@","yes")
MACROS=		$(ROOT)/macros.x64
else
MACROS=		$(ROOT)/macros
endif

Unique=		$(if $(1),$(strip $(word 1,$(1)) $(call Unique,$(filter-out $(word 1,$(1)),$(1)))))
Reverse=	$(if $(1),$(call Reverse,$(wordlist 2,$(words $(1)),$(1)))) $(firstword $(1))

COLORDIRS=	$(filter-out %\CVS\,$(filter-out %/CVS/,$(call Unique,$(dir $(wildcard colors/*.cr colors/*/*.cr)))))
SOURCEDIRS=	kbd tty demos benchmarks modes profiles $(COLORDIRS)

MACRODIRS=	$(MACROS) $(addprefix $(MACROS)/,$(SOURCEDIRS))
RMACRODIRS=	$(call Reverse, $(MACRODIRS))

$(info SOURCEDIRS=$(SOURCEDIRS))
$(info MACRODIRS=$(MACRODIRS))

# Compilers, programs

RM=		@RM@
MKDIR_P=	@MKDIR_P@
RMDIR=		@RMDIR@
PERL=		@PERL@

RMFLAGS=	-f
RMDFLAGS=	-rf

#########################################################################################
# Rules

.PHONY:		build debug release
build:		macros

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

OBJECTS=	$(foreach dir,$(MACRODIRS),$(wildcard $(dir)/*.cm))

DIRECTORIES=	$(addsuffix /.created, $(MACRODIRS))
RDIRECTORIES=	$(addsuffix /.created, $(RMACRODIRS))

define grunch
	$(GRUNCH) -w -A autoload.inc $(1) -o $(MACROS) $(wildcard $(2)*.cr)

endef

macros:			$(DIRECTORIES)
		$(call grunch,-m)
		$(foreach dir,$(SOURCEDIRS),$(call grunch,-m,$(dir)/))

force:			$(DIRECTORIES)
		$(call grunch)
		$(foreach dir,$(SOURCEDIRS),$(call grunch,,$(dir)/))

withdebug:		$(DIRECTORIES)
		$(call grunch,-g)
		$(foreach dir,$(SOURCEDIRS),$(call grunch,-g,$(dir)/))
		${GRUNCH} -w -o $(MACROS) grief.cr debug.cr

%/.created:
		-@$(MKDIR_P) $(@D)
		@echo "++ do not delete, grief edit managed content ++" > $@

vclean:			clean
		-$(RM) $(RMDFLAGS) $(RDIRECTORIES)
		-$(RMDIR) $(RMACRODIRS)

clean:
		@echo $(BUILD_TYPE) clean
		-$(RM) $(RMFLAGS) a.out mon.out crisp.log core
ifneq ("$(OBJECTS)","")
		-$(RM) $(RMFLAGS) $(OBJECTS)
endif

#end

