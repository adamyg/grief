.\" .................................................................
.\" -*- mode: nroff; -*-
.\"
.\" | -- Mandoc template
.\" | $Id: change.mandoc,v 1.2 2018/10/01 21:19:57 cvsuser Exp $
.\" | .\"The following commands are required for all man pages.
.\" | .Dd Month day, year
.\" | .Dt DOCUMENT_TITLE [section number] [architecture/volume]
.\" | .Os [OPERATING_SYSTEM] [version/release]
.\" | .Sh NAME
.\" | .Nm name
.\" | .Nd one line description of name
.\" | .Sh LIBRARY
.\" |         Sections 2 and 3 only.
.\" | .Sh SYNOPSIS
.\" |         Usage. All '.Nm' macros must be given an argument.
.\" | .Sh DESCRIPTION
.\" | .\" The following commands should be uncommented and used where appropriate.
.\" | .Sh IMPLEMENTATION NOTES
.\" | .Sh RETURN VALUES
.\" |     Sections two, three, and nine function calls.
.\" | .Sh ENVIRONMENT
.\" |         Sections 1, 6, 7 and 8 only; describe environment variables.
.\" | .Sh FILES
.\" |         Files associated with the subject, with short descriptions.
.\" | .Sh EXAMPLES
.\" |         Examples and suggestions.
.\" | .Sh DIAGNOSTICS
.\" |         Sections 1, 6, 7, 8 and 9 only (command return values (to shell)
.\" |         and fprintf/stderr type diagnostics).
.\" | .Sh COMPATIBILITY
.\" | .Sh ERRORS
.\" |         Sections two, three, and nine error and signal handling.
.\" | .Sh SEE ALSO
.\" |         Cross references and citations.
.\" | .Sh STANDARDS
.\" |         Conformance to standards if applicable.
.\" | .Sh HISTORY
.\" |         A brief history of the subject, including where support first appeared.
.\" | .Sh AUTHORS
.\" |         Credit to the person or persons who wrote the code and/or documentation.
.\" | .Sh CAVEATS
.\" |         Explanations of common misuses, i.e., security considerations for certain
.\" |         library functions.
.\" | .Sh BUGS
.\" |         Gotchas and caveats.
.\" | --
.Dd $Mdocdate$
.Dt CHANGE 1
.Os
.Sh NAME
.Nm change
.Nd edit the change log history file.
todo -- edit the todo file
.Sh DESCRIPTION
The \f(HBchange\fR macro is used to allow the user to keep track
of changes to files in a manner similar to the GNU \fHChangeLog\fR
files. The change log file is simply a free format text file where
the user can type in notes, and each day's worth of changes are automatically
timestamped, making it easy for developers to inform users of their
software what bugs have been fixed, etc.
.Pp
The change macro keeps these comments in a file called \f(HBChanges\fR.
(The name is kept to 8 characters for compatability with MS-DOS and OS/2
filename restrictions). When the change macro is executed, it looks
firstly in the current directory for the change log file, and if not
there, proceeds up the directory hierarchy looking for a file.
This allows the user to keep a file in the top level directory
but still be able to make edits to the change log even if the
user is in a sub-directory.
.Pp
The \f(HBtodo\fR macro is similar in functionality but maintains a
file called \f(HBToDo\fR.
.Pp
It is also better (in my opinion) to have a global change log
file than have each file include some comment as to why it
was changed, because comments become benign after a long time and
it is easier to truncate the change log file, than have to edit
lots of changed sources.
.Pp
The following is an example of a change log file:
.Bd -literal
Thu Apr 18 08:59:26 1991  fox
   * tty.h, unix.c: Tried to tidy up the
     termio/termios/sgtty mess.
   * unix.cr: Make sure stderr gets redirected.
   * misc.cr/crisp.cr: <Tab> and <Shift-Tab> now
     indent/unindent block if hilighted.
.Ed
.Pp
.Pp
The time stamp and username are automatically inserted for you together,
with an indented asterisk so you can start typing immediately.
.Sh MENU/KEYS
This macro can be accessed from the GRIEF features menu or by typing
\f(HBchange\fR at the command prompt.
.Sh SEE ALSO
.Xr feature ,
.Xr program
