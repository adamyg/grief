#ifndef GR_TTYX11KB_H_INCLUDED
#define GR_TTYX11KB_H_INCLUDED
#include <edidentifier.h>
__CIDENT_RCSID(gr_ttyx11kb_h,"$Id: ttyx11kb.h,v 1.5 2021/07/18 23:03:19 cvsuser Exp $")
__CPRAGMA_ONCE

/* -*- mode: c; indent-width: 4; -*- */
/* $Id: ttyx11kb.h,v 1.5 2021/07/18 23:03:19 cvsuser Exp $
 * X11 keyboard translation tables.
 *
 *  These tables direct the translation of X keyboard events into our internal
 *  counterparts.
 *
 *  The tables definied here are "seed" tables; they aren't used directly by the
 *  running code, but rather, they are used as initialization values when creating
 *  the faster hash-based lookup table.
 *
 *
 * This file is part of the GRIEF Editor.
 *
 * The GRIEF Editor is free software: you can redistribute it
 * and/or modify it under the terms of the GRIEF Editor License.
 *
 * The GRIEF Editor is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * License for more details.
 * ==end==
 */

typedef struct KeyboardXlat {
    int xcode;              /* X key code */
    int ocode;              /* Our key code */
} KeyboardXlat;

// <sunkey> translation table {
static const KeyboardXlat   sunXlatSeed[] = {
    { XK_R1,                    KEYPAD_PAUSE },
    { XK_R2,                    KEYPAD_PRTSC },
    { XK_R3,                    KEYPAD_SCROLL },
    { XK_R4,                    KEYPAD_EQUAL },
    { XK_R5,                    KEYPAD_DIV },
    { XK_R6,                    KEYPAD_STAR },
    { XK_R7,                    KEYPAD_7 },
    { XK_R8,                    KEYPAD_8 },
    { XK_R9,                    KEYPAD_9 },
    { XK_R10,                   KEYPAD_4 },
    { XK_R11,                   KEYPAD_5 },
    { XK_R12,                   KEYPAD_6 },
    { XK_R13,                   KEYPAD_1 },
    { XK_R14,                   KEYPAD_2 },
    { XK_R15,                   KEYPAD_3 }
    };

// <key> translation table
static const KeyboardXlat   plainXlatSeed[] = {
    { XK_BackSpace,             KEY_BACKSPACE },
    { XK_Return,                KEY_ENTER },
    { XK_space,                 ' ' },
    { XK_Tab,                   KEY_TAB },

    { XK_ISO_Left_Tab,          BACK_TAB },

    { XK_Linefeed,              KEY_VOID },
    { XK_Clear,                 KEY_VOID },
    { XK_Pause,                 KEY_VOID },
    { XK_Scroll_Lock,           KEY_VOID },
    { XK_Sys_Req,               KEY_VOID },
    { XK_Escape,                KEY_ESC },
    { XK_Delete,                KEY_DEL },

    { XK_Home,                  KEY_HOME },
    { XK_Left,                  KEY_LEFT },
    { XK_Up,                    KEY_UP },
    { XK_Right,                 KEY_RIGHT },
    { XK_Down,                  KEY_DOWN },
    { XK_Prior,                 KEY_PAGEUP /*PREV*/ },
    { XK_Page_Up,               KEY_PAGEUP },
    { XK_Next,                  KEY_PAGEDOWN /*NEXT*/ },
    { XK_Page_Down,             KEY_PAGEDOWN },
    { XK_End,                   KEY_END },

    { XK_Select,                KEY_VOID },
    { XK_Print,                 KEY_VOID },
    { XK_Execute,               KEY_VOID },
    { XK_Insert,                KEY_INS },
    { XK_Undo,                  KEY_UNDO },
    { XK_Redo,                  KEY_REDO },
    { XK_Menu,                  KEY_MENU },
    { XK_Find,                  KEY_SEARCH },
    { XK_Cancel,                KEY_CANCEL },
    { XK_Help,                  KEY_HELP },
    { XK_Break,                 KEY_BREAK },
    { XK_Mode_switch,           KEY_VOID },
    { XK_script_switch,         KEY_VOID },
    { XK_Num_Lock,              KEY_VOID },

    { XK_KP_Space,              ' ' },
    { XK_KP_Tab,                KEY_TAB },
    { XK_KP_Enter,              KEYPAD_ENTER },
    { XK_KP_F1,                 F(1) },
    { XK_KP_F2,                 F(2) },
    { XK_KP_F3,                 F(3) },
    { XK_KP_F4,                 F(4) },
    { XK_KP_Home,               KEY_HOME },
    { XK_KP_Left,               KEY_LEFT },
    { XK_KP_Up,                 KEY_UP },
    { XK_KP_Right,              KEY_RIGHT },
    { XK_KP_Down,               KEY_DOWN },
    { XK_KP_Prior,              KEY_PAGEUP /*PREV*/ },
    { XK_KP_Page_Up,            KEY_PAGEUP },
    { XK_KP_Next,               KEY_PAGEDOWN /*NEXT*/ },
    { XK_KP_Page_Down,          KEY_PAGEDOWN },
    { XK_KP_End,                KEY_END },
    { XK_KP_Insert,             KEY_INS },
    { XK_KP_Delete,             KEY_DEL},
    { XK_KP_Equal,              KEYPAD_EQUAL },
    { XK_KP_Multiply,           KEYPAD_STAR },
    { XK_KP_Add,                KEYPAD_PLUS },
    { XK_KP_Separator,          KEY_VOID },
    { XK_KP_Subtract,           KEYPAD_MINUS },
    { XK_KP_Decimal,            KEYPAD_DEL },
    { XK_KP_Divide,             KEYPAD_DIV },
    { XK_KP_Begin,              KEY_VOID },

    { XK_KP_0,                  KEYPAD_0 },
    { XK_KP_1,                  KEYPAD_1 },
    { XK_KP_2,                  KEYPAD_2 },
    { XK_KP_3,                  KEYPAD_3 },
    { XK_KP_4,                  KEYPAD_4 },
    { XK_KP_5,                  KEYPAD_5 },
    { XK_KP_6,                  KEYPAD_6 },
    { XK_KP_7,                  KEYPAD_7 },
    { XK_KP_8,                  KEYPAD_8 },
    { XK_KP_9,                  KEYPAD_9 },

    { XK_F1,                    F(1) },
    { XK_F2,                    F(2) },
    { XK_F3,                    F(3) },
    { XK_F4,                    F(4) },
    { XK_F5,                    F(5) },
    { XK_F6,                    F(6) },
    { XK_F7,                    F(7) },
    { XK_F8,                    F(8) },
    { XK_F9,                    F(9) },
    { XK_F10,                   F(10) },
    { XK_F11,                   F(11) },
    { XK_F12,                   F(12) },

    // ignored
    { XK_Shift_L,               KEY_VOID },     /* Left shift */
    { XK_Shift_R,               KEY_VOID },     /* Right shift */
    { XK_Control_L,             KEY_VOID },     /* Left control */
    { XK_Control_R,             KEY_VOID },     /* Right control */
    { XK_Caps_Lock,             KEY_VOID },     /* Caps lock */
    { XK_Shift_Lock,            KEY_VOID },     /* Shift lock */

    { XK_Meta_L,                KEY_VOID },     /* Left meta */
    { XK_Meta_R,                KEY_VOID },     /* Right meta */
    { XK_Alt_L,                 KEY_VOID },     /* Left alt */
    { XK_Alt_R,                 KEY_VOID },     /* Right alt */
    { XK_Super_L,               KEY_VOID },     /* Left super */
    { XK_Super_R,               KEY_VOID },     /* Right super */
    { XK_Hyper_L,               KEY_VOID },     /* Left hyper */
    { XK_Hyper_R,               KEY_VOID }      /* Right hyper */
    };

// Shift-<key> translation tables
static const KeyboardXlat   shiftXlatSeed[] = {
    { XK_BackSpace,             SHIFT_BACKSPACE },
    { XK_Return,                MOD_SHIFT | KEY_ENTER },
    { XK_space,                 MOD_SHIFT | ' ' },
    { XK_Tab,                   BACK_TAB },

    { XK_Home,                  MOD_SHIFT | KEY_HOME },
    { XK_Left,                  MOD_SHIFT | KEY_LEFT },
    { XK_Up,                    MOD_SHIFT | KEY_UP },
    { XK_Right,                 MOD_SHIFT | KEY_RIGHT },
    { XK_Down,                  MOD_SHIFT | KEY_DOWN },
    { XK_Prior,                 MOD_SHIFT | KEY_PAGEUP /*PREV*/ },
    { XK_Page_Up,               MOD_SHIFT | KEY_PAGEUP },
    { XK_Next,                  MOD_SHIFT | KEY_PAGEDOWN /*NEXT*/ },
    { XK_Page_Down,             MOD_SHIFT | KEY_PAGEDOWN },
    { XK_End,                   MOD_SHIFT | KEY_END },

    { XK_KP_Space,              MOD_SHIFT | ' ' },
    { XK_KP_Tab,                BACK_TAB },
    { XK_KP_Enter,              SHIFT_KEYPAD_ENTER },
    { XK_KP_F1,                 SF(1) },
    { XK_KP_F2,                 SF(2) },
    { XK_KP_F3,                 SF(3) },
    { XK_KP_F4,                 SF(4) },
    { XK_KP_Home,               MOD_SHIFT | KEY_HOME },
    { XK_KP_Left,               MOD_SHIFT | KEY_LEFT },
    { XK_KP_Up,                 MOD_SHIFT | KEY_UP },
    { XK_KP_Right,              MOD_SHIFT | KEY_RIGHT},
    { XK_KP_Down,               MOD_SHIFT | KEY_DOWN },
    { XK_KP_Prior,              MOD_SHIFT | KEY_PAGEUP /*PREV*/ },
    { XK_KP_Page_Up,            MOD_SHIFT | KEY_PAGEUP },
    { XK_KP_Next,               MOD_SHIFT | KEY_PAGEDOWN /*NEXT*/ },
    { XK_KP_Page_Down,          MOD_SHIFT | KEY_PAGEDOWN },
    { XK_KP_End,                MOD_SHIFT | KEY_END },
    { XK_KP_Insert,             MOD_SHIFT | KEY_INS },
    { XK_KP_Delete,             MOD_SHIFT | KEY_DEL },
    { XK_KP_Equal,              SHIFT_KEYPAD_EQUAL },
    { XK_KP_Multiply,           SHIFT_KEYPAD_STAR },
    { XK_KP_Add,                SHIFT_KEYPAD_PLUS },
    { XK_KP_Subtract,           SHIFT_KEYPAD_MINUS },
    { XK_KP_Decimal,            SHIFT_KEYPAD_DEL },
    { XK_KP_Divide,             SHIFT_KEYPAD_DIV },

    { XK_KP_1,                  SHIFT_KEYPAD_1 },
    { XK_KP_2,                  SHIFT_KEYPAD_2 },
    { XK_KP_3,                  SHIFT_KEYPAD_3 },
    { XK_KP_4,                  SHIFT_KEYPAD_4 },
    { XK_KP_5,                  SHIFT_KEYPAD_5 },
    { XK_KP_6,                  SHIFT_KEYPAD_6 },
    { XK_KP_7,                  SHIFT_KEYPAD_7 },
    { XK_KP_8,                  SHIFT_KEYPAD_8 },
    { XK_KP_9,                  SHIFT_KEYPAD_9 },

    { XK_F1,                    SF(1) },
    { XK_F2,                    SF(2) },
    { XK_F3,                    SF(3) },
    { XK_F4,                    SF(4) },
    { XK_F5,                    SF(5) },
    { XK_F6,                    SF(6) },
    { XK_F7,                    SF(7) },
    { XK_F8,                    SF(8) },
    { XK_F9,                    SF(9) },
    { XK_F10,                   SF(10) },
    { XK_F11,                   SF(11) },
    { XK_F12,                   SF(12) },
    };

// Ctrl-<key> translation tables
static const KeyboardXlat   ctrlXlatSeed[] = {
    { XK_BackSpace,             CTRL_BACKSPACE },
    { XK_Tab,                   CTRL_TAB },
    { XK_Return,                MOD_CTRL | KEY_ENTER },
    { XK_space,                 MOD_CTRL | ' ' },
    { XK_Tab,                   CTRL_TAB },

    { XK_Home,                  MOD_CTRL | KEY_HOME },
    { XK_Left,                  MOD_CTRL | KEY_LEFT },
    { XK_Up,                    MOD_CTRL | KEY_UP },
    { XK_Right,                 MOD_CTRL | KEY_RIGHT },
    { XK_Down,                  MOD_CTRL | KEY_DOWN },
    { XK_Prior,                 MOD_CTRL | KEY_PAGEUP /*PREV*/ },
    { XK_Page_Up,               MOD_CTRL | KEY_PAGEUP },
    { XK_Next,                  MOD_CTRL | KEY_PAGEDOWN /*NEXT*/ },
    { XK_Page_Down,             MOD_CTRL | KEY_PAGEDOWN },
    { XK_End,                   MOD_CTRL | KEY_END },

    { XK_KP_Space,              MOD_CTRL | ' ' },
    { XK_KP_Tab,                MOD_CTRL | KEY_TAB },
    { XK_KP_Enter,              MOD_CTRL | KEY_ENTER },
    { XK_KP_F1,                 CF(1) },
    { XK_KP_F2,                 CF(2) },
    { XK_KP_F3,                 CF(3) },
    { XK_KP_F4,                 CF(4) },
    { XK_KP_Home,               MOD_CTRL | KEY_HOME },
    { XK_KP_Left,               MOD_CTRL | KEY_LEFT },
    { XK_KP_Up,                 MOD_CTRL | KEY_UP },
    { XK_KP_Right,              MOD_CTRL | KEY_RIGHT },
    { XK_KP_Down,               MOD_CTRL | KEY_DOWN },
    { XK_KP_Prior,              MOD_CTRL | KEY_PAGEUP /*PREV*/ },
    { XK_KP_Page_Up,            MOD_CTRL | KEY_PAGEUP },
    { XK_KP_Next,               MOD_CTRL | KEY_PAGEDOWN /*NEXT*/ },
    { XK_KP_Page_Down,          MOD_CTRL | KEY_PAGEDOWN },
    { XK_KP_End,                MOD_CTRL | KEY_END },
    { XK_KP_Insert,             MOD_CTRL | KEY_INS },
    { XK_KP_Delete,             MOD_CTRL | KEY_DEL },
    { XK_KP_Equal,              CTRL_KEYPAD_EQUAL },
    { XK_KP_Multiply,           CTRL_KEYPAD_STAR },
    { XK_KP_Add,                CTRL_KEYPAD_PLUS },
    { XK_KP_Subtract,           CTRL_KEYPAD_MINUS },
    { XK_KP_Decimal,            CTRL_KEYPAD_DEL },
    { XK_KP_Divide,             CTRL_KEYPAD_DIV },

    { XK_KP_0,                  MOD_CTRL | KEYPAD_0 },
    { XK_KP_1,                  MOD_CTRL | KEYPAD_1 },
    { XK_KP_2,                  MOD_CTRL | KEYPAD_2 },
    { XK_KP_3,                  MOD_CTRL | KEYPAD_3 },
    { XK_KP_4,                  MOD_CTRL | KEYPAD_4 },
    { XK_KP_5,                  MOD_CTRL | KEYPAD_5 },
    { XK_KP_6,                  MOD_CTRL | KEYPAD_6 },
    { XK_KP_7,                  MOD_CTRL | KEYPAD_7 },
    { XK_KP_8,                  MOD_CTRL | KEYPAD_8 },
    { XK_KP_9,                  MOD_CTRL | KEYPAD_9 },

    { XK_F1,                    CF(1) },
    { XK_F2,                    CF(2) },
    { XK_F3,                    CF(3) },
    { XK_F4,                    CF(4) },
    { XK_F5,                    CF(5) },
    { XK_F6,                    CF(6) },
    { XK_F7,                    CF(7) },
    { XK_F8,                    CF(8) },
    { XK_F9,                    CF(9) },
    { XK_F10,                   CF(10) },
    { XK_F11,                   CF(11) },
    { XK_F12,                   CF(12) },

    { XK_a,                     CTRL_A },
    { XK_b,                     CTRL_B },
    { XK_c,                     CTRL_C },
    { XK_d,                     CTRL_D },
    { XK_e,                     CTRL_E },
    { XK_f,                     CTRL_F },
    { XK_g,                     CTRL_G },
    { XK_h,                     CTRL_H },
    { XK_i,                     CTRL_I },
    { XK_j,                     CTRL_J },
    { XK_k,                     CTRL_K },
    { XK_l,                     CTRL_L },
    { XK_m,                     CTRL_M },
    { XK_n,                     CTRL_N },
    { XK_o,                     CTRL_O },
    { XK_p,                     CTRL_P },
    { XK_q,                     CTRL_Q },
    { XK_r,                     CTRL_R },
    { XK_s,                     CTRL_S },
    { XK_t,                     CTRL_T },
    { XK_u,                     CTRL_U },
    { XK_v,                     CTRL_V },
    { XK_w,                     CTRL_W },
    { XK_x,                     CTRL_X },
    { XK_y,                     CTRL_Y },
    { XK_z,                     CTRL_Z },

    { XK_0,                     CTRL_0 },
    { XK_1,                     CTRL_1 },
    { XK_2,                     CTRL_2 },
    { XK_3,                     CTRL_3 },
    { XK_4,                     CTRL_4 },
    { XK_5,                     CTRL_5 },
    { XK_6,                     CTRL_6 },
    { XK_7,                     CTRL_7 },
    { XK_8,                     CTRL_8 },
    { XK_9,                     CTRL_9 },

    { '!',                      __CTRL('!') },
    { '"',                      __CTRL('"') },
    { '#',                      __CTRL('#') },
    { '&',                      __CTRL('&') },
    { '*',                      __CTRL('*') },
    { ',',                      __CTRL(',') },
    { '-',                      __CTRL('-') },
    { '.',                      __CTRL('.') },
    { '/',                      __CTRL('/') },
    { ':',                      __CTRL(':') },
    { ';',                      __CTRL(';') },
    { '<',                      __CTRL('<') },
    { '=',                      __CTRL('=') },
    { '>',                      __CTRL('>') },
    { '?',                      __CTRL('?') },
    { '@',                      __CTRL('@') },
    { 'S',                      __CTRL('S') },
    { '[',                      __CTRL('[') },
    { '\'',                     __CTRL('\'') },
    { '\\',                     __CTRL('\\') },
    { ']',                      __CTRL(']') },
    { '^',                      __CTRL('^') },
    { '_',                      __CTRL('_') },
    { '`',                      __CTRL('`') },
    { '{',                      __CTRL('{') },
    { '|',                      __CTRL('|') },
    { '}',                      __CTRL('}') },
    { '~',                      __CTRL('~') }
    };

// Ctrl-Shift-<key> translation tables
static const KeyboardXlat   ctrlShiftXlatSeed[] = {
    { XK_Home,                  MOD_CTRL | MOD_SHIFT | KEY_HOME },
    { XK_Left,                  MOD_CTRL | MOD_SHIFT | KEY_LEFT },
    { XK_Up,                    MOD_CTRL | MOD_SHIFT | KEY_UP },
    { XK_Right,                 MOD_CTRL | MOD_SHIFT | KEY_RIGHT },
    { XK_Down,                  MOD_CTRL | MOD_SHIFT | KEY_DOWN },
    { XK_Prior,                 MOD_CTRL | MOD_SHIFT | KEY_PAGEUP /*PREV*/ },
    { XK_Page_Up,               MOD_CTRL | MOD_SHIFT | KEY_PAGEUP },
    { XK_Next,                  MOD_CTRL | MOD_SHIFT | KEY_PAGEDOWN /*NEXT*/ },
    { XK_Page_Down,             MOD_CTRL | MOD_SHIFT | KEY_PAGEDOWN },
    { XK_End,                   MOD_CTRL | MOD_SHIFT | KEY_END },

    { XK_KP_Space,              MOD_CTRL | MOD_SHIFT | ' ' },
    { XK_KP_Tab,                MOD_CTRL | MOD_SHIFT | KEY_TAB },
    { XK_KP_Enter,              MOD_CTRL | MOD_SHIFT | KEY_ENTER },
    { XK_KP_F1,                 CSF(1) },
    { XK_KP_F2,                 CSF(2) },
    { XK_KP_F3,                 CSF(3) },
    { XK_KP_F4,                 CSF(4) },
    { XK_KP_Home,               MOD_CTRL | MOD_SHIFT | KEY_HOME },
    { XK_KP_Left,               MOD_CTRL | MOD_SHIFT | KEY_LEFT },
    { XK_KP_Up,                 MOD_CTRL | MOD_SHIFT | KEY_UP },
    { XK_KP_Right,              MOD_CTRL | MOD_SHIFT | KEY_RIGHT },
    { XK_KP_Down,               MOD_CTRL | MOD_SHIFT | KEY_DOWN },
    { XK_KP_Prior,              MOD_CTRL | MOD_SHIFT | KEY_PAGEUP /*PREV*/ },
    { XK_KP_Page_Up,            MOD_CTRL | MOD_SHIFT | KEY_PAGEUP },
    { XK_KP_Next,               MOD_CTRL | MOD_SHIFT | KEY_PAGEDOWN /*NEXT*/ },
    { XK_KP_Page_Down,          MOD_CTRL | MOD_SHIFT | KEY_PAGEDOWN },
    { XK_KP_End,                MOD_CTRL | MOD_SHIFT | KEY_END },
    { XK_KP_Insert,             MOD_CTRL | MOD_SHIFT | KEY_INS },
    { XK_KP_Delete,             MOD_CTRL | MOD_SHIFT | KEY_DEL },
    { XK_KP_Equal,              CTRL_KEYPAD_EQUAL },
    { XK_KP_Multiply,           CTRL_KEYPAD_STAR },
    { XK_KP_Add,                CTRL_KEYPAD_PLUS },
    { XK_KP_Subtract,           CTRL_KEYPAD_MINUS },
    { XK_KP_Decimal,            CTRL_KEYPAD_DEL },
    { XK_KP_Divide,             CTRL_KEYPAD_DIV },

    { XK_KP_0,                  MOD_CTRL | MOD_SHIFT | KEYPAD_0 },
    { XK_KP_1,                  MOD_CTRL | MOD_SHIFT | KEYPAD_1 },
    { XK_KP_2,                  MOD_CTRL | MOD_SHIFT | KEYPAD_2 },
    { XK_KP_3,                  MOD_CTRL | MOD_SHIFT | KEYPAD_3 },
    { XK_KP_4,                  MOD_CTRL | MOD_SHIFT | KEYPAD_4 },
    { XK_KP_5,                  MOD_CTRL | MOD_SHIFT | KEYPAD_5 },
    { XK_KP_6,                  MOD_CTRL | MOD_SHIFT | KEYPAD_6 },
    { XK_KP_7,                  MOD_CTRL | MOD_SHIFT | KEYPAD_7 },
    { XK_KP_8,                  MOD_CTRL | MOD_SHIFT | KEYPAD_8 },
    { XK_KP_9,                  MOD_CTRL | MOD_SHIFT | KEYPAD_9 },
    };

// Alt-<key> translation
static const KeyboardXlat   altXlatSeed[] = {
    { XK_BackSpace,             ALT_BACKSPACE },
    { XK_Return,                MOD_SHIFT | KEY_ENTER },
    { XK_space,                 __ALT(' ') },
    { XK_Tab,                   ALT_TAB },

    { XK_Home,                  MOD_META | KEY_HOME },
    { XK_Left,                  MOD_META | KEY_LEFT },
    { XK_Up,                    MOD_META | KEY_UP },
    { XK_Right,                 MOD_META | KEY_RIGHT },
    { XK_Down,                  MOD_META | KEY_DOWN },
    { XK_Prior,                 MOD_META | KEY_PAGEUP /*PREV*/ },
    { XK_Page_Up,               MOD_META | KEY_PAGEUP },
    { XK_Next,                  MOD_META | KEY_PAGEDOWN /*NEXT*/ },
    { XK_Page_Down,             MOD_META | KEY_PAGEDOWN },
    { XK_End,                   MOD_META | KEY_END },

    { XK_KP_Space,              MOD_META | ' ' },
    { XK_KP_Tab,                MOD_META | KEY_TAB },
    { XK_KP_Enter,              MOD_META | KEY_ENTER },
    { XK_KP_F1,                 AF(1) },
    { XK_KP_F2,                 AF(2) },
    { XK_KP_F3,                 AF(3) },
    { XK_KP_F4,                 AF(4) },
    { XK_KP_Home,               MOD_META | KEY_HOME },
    { XK_KP_Left,               MOD_META | KEY_LEFT },
    { XK_KP_Up,                 MOD_META | KEY_UP },
    { XK_KP_Right,              MOD_META | KEY_RIGHT },
    { XK_KP_Down,               MOD_META | KEY_DOWN },
    { XK_KP_Prior,              MOD_META | KEY_PAGEUP /*PREV*/ },
    { XK_KP_Page_Up,            MOD_META | KEY_PAGEUP },
    { XK_KP_Next,               MOD_META | KEY_PAGEDOWN /*NEXT*/ },
    { XK_KP_Page_Down,          MOD_META | KEY_PAGEDOWN },
    { XK_KP_End,                MOD_META | KEY_END },
    { XK_KP_Insert,             MOD_META | KEY_INS },
    { XK_KP_Delete,             MOD_META | KEY_DEL },
    { XK_KP_Equal,              MOD_META | KEYPAD_EQUAL },
    { XK_KP_Multiply,           MOD_META | KEYPAD_STAR },
    { XK_KP_Add,                MOD_META | KEYPAD_PLUS },
    { XK_KP_Subtract,           MOD_META | KEYPAD_MINUS },
    { XK_KP_Decimal,            MOD_META | KEYPAD_DEL },
    { XK_KP_Divide,             MOD_META | KEYPAD_DIV },

    { XK_KP_0,                  MOD_META | KEYPAD_0 },
    { XK_KP_1,                  MOD_META | KEYPAD_1 },
    { XK_KP_2,                  MOD_META | KEYPAD_2 },
    { XK_KP_3,                  MOD_META | KEYPAD_3 },
    { XK_KP_4,                  MOD_META | KEYPAD_4 },
    { XK_KP_5,                  MOD_META | KEYPAD_5 },
    { XK_KP_6,                  MOD_META | KEYPAD_6 },
    { XK_KP_7,                  MOD_META | KEYPAD_7 },
    { XK_KP_8,                  MOD_META | KEYPAD_8 },
    { XK_KP_9,                  MOD_META | KEYPAD_9 },

    { XK_F1,                    AF(1) },
    { XK_F2,                    AF(2) },
    { XK_F3,                    AF(3) },
    { XK_F4,                    AF(4) },
    { XK_F5,                    AF(5) },
    { XK_F6,                    AF(6) },
    { XK_F7,                    AF(7) },
    { XK_F8,                    AF(8) },
    { XK_F9,                    AF(9) },
    { XK_F10,                   AF(10) },
    { XK_F11,                   AF(11) },
    { XK_F12,                   AF(12) },

    { XK_A,                     ALT_A },
    { XK_B,                     ALT_B },
    { XK_C,                     ALT_C },
    { XK_D,                     ALT_D },
    { XK_E,                     ALT_E },
    { XK_F,                     ALT_F },
    { XK_G,                     ALT_G },
    { XK_H,                     ALT_H },
    { XK_I,                     ALT_I },
    { XK_J,                     ALT_J },
    { XK_K,                     ALT_K },
    { XK_L,                     ALT_L },
    { XK_M,                     ALT_M },
    { XK_N,                     ALT_N },
    { XK_O,                     ALT_O },
    { XK_P,                     ALT_P },
    { XK_Q,                     ALT_Q },
    { XK_R,                     ALT_R },
    { XK_S,                     ALT_S },
    { XK_T,                     ALT_T },
    { XK_U,                     ALT_U },
    { XK_V,                     ALT_V },
    { XK_W,                     ALT_W },
    { XK_X,                     ALT_X },
    { XK_Y,                     ALT_Y },
    { XK_Z,                     ALT_Z },

    { XK_a,                     ALT_A },
    { XK_b,                     ALT_B },
    { XK_c,                     ALT_C },
    { XK_d,                     ALT_D },
    { XK_e,                     ALT_E },
    { XK_f,                     ALT_F },
    { XK_g,                     ALT_G },
    { XK_h,                     ALT_H },
    { XK_i,                     ALT_I },
    { XK_j,                     ALT_J },
    { XK_k,                     ALT_K },
    { XK_l,                     ALT_L },
    { XK_m,                     ALT_M },
    { XK_n,                     ALT_N },
    { XK_o,                     ALT_O },
    { XK_p,                     ALT_P },
    { XK_q,                     ALT_Q },
    { XK_r,                     ALT_R },
    { XK_s,                     ALT_S },
    { XK_t,                     ALT_T },
    { XK_u,                     ALT_U },
    { XK_v,                     ALT_V },
    { XK_w,                     ALT_W },
    { XK_x,                     ALT_X },
    { XK_y,                     ALT_Y },
    { XK_z,                     ALT_Z },

    { XK_0,                     ALT_0 },
    { XK_1,                     ALT_1 },
    { XK_2,                     ALT_2 },
    { XK_3,                     ALT_3 },
    { XK_4,                     ALT_4 },
    { XK_5,                     ALT_5 },
    { XK_6,                     ALT_6 },
    { XK_7,                     ALT_7 },
    { XK_8,                     ALT_8 },
    { XK_9,                     ALT_9 },

    { '!',                      __ALT('!') },
    { '"',                      __ALT('"') },
    { '#',                      __ALT('#') },
    { '&',                      __ALT('&') },
    { '*',                      __ALT('*') },
    { ',',                      __ALT(',') },
    { '-',                      __ALT('-') },
    { '.',                      __ALT('.') },
    { '/',                      __ALT('/') },
    { ':',                      __ALT(':') },
    { ';',                      __ALT(';') },
    { '<',                      __ALT('<') },
    { '=',                      __ALT('=') },
    { '>',                      __ALT('>') },
    { '?',                      __ALT('?') },
    { '@',                      __ALT('@') },
    { 'S',                      __ALT('S') },
    { '[',                      __ALT('[') },
    { '\'',                     __ALT('\'') },
    { '\\',                     __ALT('\\') },
    { ']',                      __ALT(']') },
    { '^',                      __ALT('^') },
    { '_',                      __ALT('_') },
    { '`',                      __ALT('`') },
    { '{',                      __ALT('{') },
    { '|',                      __ALT('|') },
    { '}',                      __ALT('}') },
    { '~',                      __ALT('~') }
    };

#endif /*GR_TTYX11KB_H_INCLUDED*/
