# -*- mode: mak; -*-
# $Id: Makefile.in,v 1.35 2015/02/19 23:18:18 ayoung Exp $
# GRIEF - top level makefile.
#
#
# Copyright (c) 1998 - 2014, Adam Young.
# All rights reserved.
#
# This file is part of the GRIEF Editor.
#
# The GRIEF Editor is free software: you can redistribute it
# and/or modify it under the terms of the GRIEF Editor License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The GRIEF Editor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT		= @abs_top_builddir@

PKG_BUGREPORT	= @PACKAGE_BUGREPORT@
PKG_NAME	= @PACKAGE_NAME@
PKG_STRING	= @PACKAGE_STRING@
PKG_TARNAME	= @PACKAGE_TARNAME@
PKG_URL		= @PACKAGE_URL@
PKG_VERSION	= @PACKAGE_VERSION@
ifeq ("","$(PKG_VERSION)")
PKG_VERSION	= 3.2.0
endif
PKG_VERSION_1	=$(word 1,$(subst ., ,$(PKG_VERSION)))
PKG_VERSION_2	=$(word 2,$(subst ., ,$(PKG_VERSION)))
PKG_VERSION_3	=$(word 3,$(subst ., ,$(PKG_VERSION)))

PATH_SEPARATOR	= @PATH_SEPARATOR@

build		= @build@
build_alias	= @build_alias@
build_cpu	= @build_cpu@
build_os	= @build_os@
build_vendor	= @build_vendor@

host		= @host@
host_alias	= @host_alias@
host_cpu	= @host_cpu@
host_os 	= @host_os@
host_vendor	= @host_vendor@

target		= @target@
target_alias	= @target_alias@
target_cpu	= @target_cpu@
target_os	= @target_os@
target_vendor	= @target_vendor@

	# directory components
prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@

	# directory results
bindir		= @bindir@
sbindir		= @sbindir@
libexecdir	= @libexecdir@
libdir		= @libdir@
datadir		= @datadir@

        # package directories
pkgname		= grief
ifeq (rief,$(findstring rief,$(libexecdir)))
pkglibexecdir	= $(libexecdir)
pkglibdir	= $(libdir)
else
pkglibexecdir	= $(libexecdir)/$(pkgname)
pkglibdir	= $(libdir)/$(pkgname)
endif
ifeq (rief,$(findstring rief,$(libexecdir)))
pkgdatadir	= $(datadir)
else
pkgdatadir	= $(datadir)/$(pkgname)
endif

BINDIR		= $(bindir)
SBINDIR		= $(sbindir)
LIBEXECDIR	= $(pkglibexecdir)
LIBDIR		= $(pkglibdir)
DATADIR		= $(pkgdatadir)

top_build_prefix= @top_build_prefix@
top_builddir	= @top_builddir@
top_srcdir	= @top_srcdir@

# File extensions

E=
A=		.a
LP=		lib
OBJEXT=		@OBJEXT@
EXEEXT=		@EXEEXT@

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out

# Compilers, programs

RM=		@RM@
TAR=		@TAR@
PERL=		@PERL@
INSTALL=	@INSTALL@
INSTALL_PROGRAM=@INSTALL_PROGRAM@
INSTALL_DATA=	@INSTALL_DATA@

# Common flags

RMFLAGS=	-f
RMDFLAGS=	-rf

# Directories

D_BIN=		$(ROOT)/bin
D_INC=		$(ROOT)/include
D_OBJ=		$(ROOT)/objects
D_LIB=		$(ROOT)/lib

D_GR=		$(ROOT)/gr
D_GM=		$(ROOT)/gm
D_GRCPP=	$(ROOT)/grcpp
D_GRMANDOC=	$(ROOT)/grmandoc
D_GRUNCH=	$(ROOT)/grunch

D_MACROS=	$(ROOT)/macros
D_HELP=		$(ROOT)/help
D_MACSRC=	$(ROOT)/macsrc
D_HLPDOC=	$(ROOT)/hlpdoc

BUILDNUMBER=	BUILDNUMBER.in
BUILDINFO=	include/edbuildinfo.h

# Targets

LW=		$(D_LIB)/$(LP)

BINS=\
	$(D_BIN)/gr$(E)			\
	$(D_BIN)/gm$(E)			\
	$(D_BIN)/grcpp$(E)		\
	$(D_BIN)/grmandoc$(E)		\
	$(D_BIN)/grunch$(E)

ifneq "" "$(filter mingw32 win32,@build_os@)"
LIBS=	$(LW)win32$(A)
endif
LIBS+=\
	$(LW)misc$(A)			\
	$(LW)malloc$(A)			\
	$(LW)llist$(A)			\
	$(LW)splay$(A)			\
	$(LW)term$(A)			\
	$(LW)teken$(A)			\
	$(LW)onigrx$(A)			\
	$(LW)tre$(A)			\
	$(LW)chartable$(A)		\
	$(LW)charudet$(A)		\
	$(LW)vfs$(A)			\
	$(LW)bsdio$(A)			\
	$(LW)bsdfetch$(A)		\
	$(LW)bsddb$(A)

all:			dirs buildinfo libs bins
		$(MAKE) -C $(D_HLPDOC) $(MAKEFLAGS)
		$(MAKE) -C $(D_MACSRC) $(MAKEFLAGS)

# Build support

buildinfo:		$(BUILDINFO)

$(BUILDINFO):		$(BUILDNUMBER) Makefile
	@sh -c "\
echo // Auto-generated by Makefile >$@; \
echo \#define GR_VERSION          \\\"$(PKG_VERSION)\\\" >>$@; \
echo \#define GR_VERSION_1        $(PKG_VERSION_1) >>$@; \
echo \#define GR_VERSION_2        $(PKG_VERSION_2) >>$@; \
echo \#define GR_VERSION_3        $(PKG_VERSION_3) >>$@; \
echo \#define GR_BUILD_DATE       \\\"$(PKG_BUILD_DATE)\\\" >>$@; \
echo \#define GR_BUILD_NUMBER     \\\"$(PKG_BUILD_NUMBER)\\\" >>$@; \
echo \#define GR_BUILD_BINDIR     \\\"$(BINDIR)\\\" >>$@; \
echo \#define GR_BUILD_SBINDIR    \\\"$(SBINDIR)\\\" >>$@; \
echo \#define GR_BUILD_LIBDIR     \\\"$(LIBDIR)\\\" >>$@; \
echo \#define GR_BUILD_LIBEXECDIR \\\"$(LIBEXECDIR)\\\" >>$@; \
echo \#define GR_BUILD_DATADIR    \\\"$(DATADIR)\\\" >>$@; \
"

PKG_BUILD_DATE=		$(shell date +'%Y%m%d')
PKG_BUILD_NUMBER=	$(shell cat ./$(BUILDNUMBER))

.PHONY:			new_buildnumber
new_buildnumber:
	-chmod +w $(BUILDNUMBER)

$(BUILDNUMBER):		Makefile
	-@sh -c "\
if [ ! -f $(BUILDNUMBER) ]; then echo 1 >$(BUILDNUMBER); fi;\
if [ -w $(BUILDNUMBER) ]; then \
echo incrementing build number ...; \
echo $$(($$(cat $(BUILDNUMBER)) + 1)) >$(BUILDNUMBER);\
fi;\
"
	-chmod -w $(BUILDNUMBER)

# libtool generation
#   libtool:	@LIBTOOL_DEPS@
#       @LIBTOOL_DEPS@
#	$(SHELL) auto/config.status --recheck

# Components

dirs:		$(D_OBJ)/.created $(D_LIB)/.created $(D_BIN)/.created

%/.created:
		-@mkdir $(@D)
		@echo "++ do not delete, managed content ++" > $@

bins:			$(BINS)

$(D_BIN)/gr$(E):	$(D_BIN)/.created libs
		$(MAKE) -C $(D_GR) $(MAKEFLAGS)

$(D_BIN)/gm$(E):	$(D_BIN)/.created libs
		$(MAKE) -C $(D_GM) $(MAKEFLAGS)

$(D_BIN)/grcpp$(E):	$(D_BIN)/.created libs
		$(MAKE) -C $(D_GRCPP) $(MAKEFLAGS)

$(D_BIN)/grmandoc$(E):	$(D_BIN)/.created libs
		$(MAKE) -C $(D_GRMANDOC) $(MAKEFLAGS)

$(D_BIN)/grunch$(E):	$(D_BIN)/.created libs
		$(MAKE) -C $(D_GRUNCH) $(MAKEFLAGS)

libs:			$(LIBS)

$(LW)win32$(A):		$(D_LIB)/.created $(D_OBJ)/.created
		$(MAKE) -C libw32 $(MAKEFLAGS)

$(LW)termlib$(A):	$(D_LIB)/.created $(D_OBJ)/.created
		$(MAKE) -C libterm $(MAKEFLAGS)

$(LW)%$(A):		$(D_LIB)/.created $(D_OBJ)/.created
		$(MAKE) -C $(notdir $(basename $@)) $(MAKEFLAGS)

install:		all
		-mkdir -p $(BINDIR)
		-mkdir -p $(DATADIR)
		for d in help macros macros/demos macros/kbd macros/tty src src/demos src/kbd src/tty; do \
			mkdir -p $(DATADIR)/$${d}; \
		done
		$(INSTALL_PROGRAM) -m 0755 -c -o bin -g bin $(D_BIN)/gr$(E) $(BINDIR)
		$(INSTALL_PROGRAM) -m 0755 -c -o bin -g bin $(D_BIN)/gm$(E) $(BINDIR)
		$(INSTALL_PROGRAM) -m 0755 -c -o bin -g bin $(D_BIN)/grcpp$(E) $(BINDIR)
		$(INSTALL_PROGRAM) -m 0755 -c -o bin -g bin $(D_BIN)/grmandoc$(E) $(BINDIR)
		$(INSTALL_PROGRAM) -m 0755 -c -o bin -g bin $(D_BIN)/grunch$(E) $(BINDIR)
		@echo Installing GRIEF help files...
		-$(TAR) cf - -C $(D_HELP)   --mode=+rw --exclude CVS . | ($(TAR) xf - -C $(DATADIR)/help)
		@echo Installing GRIEF compiled macros...
		-$(TAR) cf - -C $(D_MACROS) --mode=+rw --exclude CVS . | ($(TAR) xf - -C $(DATADIR)/macros)
		@echo Installing GRIEF macro source...
		-$(TAR) cf - -C $(D_MACSRC) --mode=+rw --exclude CVS . | ($(TAR) xf - -C $(DATADIR)/src)
		@echo Install done.

clean:
		$(MAKE) -C libmisc clean
		$(MAKE) -C libmalloc clean
		$(MAKE) -C libllist clean
		$(MAKE) -C libsplay clean
		$(MAKE) -C libterm clean
		$(MAKE) -C libteken clean
		$(MAKE) -C libonigrx clean
		$(MAKE) -C libtre clean
		$(MAKE) -C libchartable clean
		$(MAKE) -C libcharudet clean
		$(MAKE) -C libvfs clean
		$(MAKE) -C libbsdio clean
		$(MAKE) -C libbsdfetch clean
		$(MAKE) -C libbsddb clean
		$(MAKE) -C $(D_GR) clean
		$(MAKE) -C $(D_GM) clean
		$(MAKE) -C $(D_GRCPP) clean
		$(MAKE) -C $(D_GRMANDOC) clean
		$(MAKE) -C $(D_GRUNCH) clean
		$(MAKE) -C $(D_MACSRC) clean
		$(MAKE) -C $(D_HLPDOC) clean
		$(RM) $(RMDFLAGS) $(D_BIN) $(D_MACROS) $(D_HELP) $(D_LIB) $(D_OBJ)

distclean:		clean
		$(RM) $(RMFLAGS) config.cache config.log config.status \
			gr/Makefile \
			gm/Makefile \
			grcpp/Makefile \
			grmandoc/Makefile \
			grunch/Makefile \
			hlpsrc/Makefile \
			macsrc/Makefile \
			libmisc/Makefile \
			libmalloc/Makefile \
			libllist/Makefile \
			libsplay/Makefile \
			libterm/Makefile \
			libteken/Makefile \
			libonigrx/Makefile \
			libtre/Makefile \
			libchartable/Makefile \
			libcharudet/Makefile \
			libvfs/Makefile \
			libbsdio/Makefile \
			libbsdfetch/Makefile \
			libbsddb/Makefile \
			include/config.h \
			Makefile

#end
