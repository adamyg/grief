# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.25 2021/06/06 06:03:13 cvsuser Exp $
# libchartable makefile.
#
#
# Copyright (c) 2010 - 2021, Adam Young.
# All rights reserved.
#
# This file is part of the GRIEF Editor.
#
# The GRIEF Editor is free software: you can redistribute it
# and/or modify it under the terms of the GRIEF Editor License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The GRIEF Editor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@abs_top_builddir@
top_srcdir=	@abs_top_srcdir@

# File extensions

C=		.c
O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@
LT_OBJDIR=	@LT_OBJDIR@
WGET=		@WGET@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_BINCTBL=	$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)/ctbl
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/libchartable
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

OBJMKDIR :=	$(shell test -d $(ROOT)/objects) || mkdir $(ROOT)/objects)
LIBMKDIR :=	$(shell test -d $(ROOT)/lib) || mkdir $(ROOT)/lib)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
##ifeq ("mingw32","@build_os@")
##CINCLUDE+=	-I../libw32
##endif
CEXTRA=		@DEFS@

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif

LDLIBS=		-L$(D_LIB) @LIBS@ -lmisc @LIBMALLOC@ @LIBTHREAD@ @EXTRALIBS@
##ifeq ("mingw32","@build_os@")
##LDLIBS+=	-lw32 -lshlwapi -lpsapi -lole32 -luuid -lgdi32 -luserenv -lnetapi32 -ladvapi32 -lWs2_32
##endif

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

CTBLLIB=	$(D_LIB)/$(LP)chartable$(A)

CTBLOBJS=\
	$(D_OBJ)/charseticonv$(O)		\
	$(D_OBJ)/charsetstream$(O)		\
	$(D_OBJ)/charsetistream$(O)		\
	$(D_OBJ)/charsetfstream$(O)		\
	$(D_OBJ)/charsettable$(O)		\
	$(D_OBJ)/charsetutil$(O)		\
	$(D_OBJ)/charsetalias$(O)		\
	$(D_OBJ)/charsetlocale$(O)		\
	$(D_OBJ)/charsetutf32$(O)		\
	$(D_OBJ)/charsetutf16$(O)		\
	$(D_OBJ)/charsetutf8$(O)		\
	$(D_OBJ)/charsetwidth$(O)		\
	$(D_OBJ)/charsetwidth_cjk$(O)		\
	$(D_OBJ)/utf8$(O)

MODULES=	$(notdir $(basename $(wildcard cnvtables/cx*.c)))

MODULEOBJS=	$(addprefix $(D_OBJ)/,$(addsuffix .lo,$(MODULES)))
MODULELIBS=	$(addprefix $(D_LIB)/,$(addsuffix .la,$(MODULES)))

OBJS=		$(CTBLOBJS) $(MODULEOBJS)
LIBS=		$(CTBLLIB)
TSKS=


#########################################################################################
# Rules

.PHONY:			build release debug
build:			data/.import $(CTBLLIB)
		$(MAKE) modules

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

$(CTBLLIB):		charsetlocales.h		\
			charsettable.c			\
			$(D_OBJ)/.created		\
			$(CTBLOBJS)
		$(RM) $(RMFLAGS) $@
		$(AR) $(ARFLAGS) $@ $(CTBLOBJS)
		$(RANLIB) $@

XCLEAN+=	charsettables.h charsetnames.h charsetdesc.h charsetlocales.h

clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(LIBS) $(OBJS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(LIBTOOL) --mode=clean $(RM) $(MODULELIBS)

charsetlocales.h:	makelocale.pl
		$(PERL) makelocale.pl > charsetlocales.h

charsettable.c:		charsettables.h

charsettables.h:	makechartable.pl cnvtables/.created
		@echo building character tables
		$(PERL) makechartable.pl --crunch --dynamic --packaged

modules:		$(D_BINCTBL)/.created		\
			$(MODULELIBS)
		@echo dynamic character conversion modules built ...

data/.import:		data/.created			\
			data/MAPPINGS/.import		\
			data/Unihan.zip			\
			data/UCD.zip			\
			data/uniset.tar.gz		\
			data/Zeichenreferenz
		@echo "++ do not delete, managed content ++" > $@

data/MAPPINGS/.import:	data/MAPPINGS/.created
		$(WGET) -P data -r -nv -nH -e robots=off --cut-dirs=1 --no-parent --reject "index.html.*" http://ftp.unicode.org/Public/MAPPINGS/
		@echo "++ do not delete, managed content ++" > $@

data/Unihan.zip:
		$(WGET) -P data -nv http://ftp.unicode.org/Public/UNIDATA/Unihan.zip

data/UCD.zip:
		$(WGET) -P data -nv http://ftp.unicode.org/Public/UNIDATA/UCD.zip

data/uniset.tar.gz:
		$(WGET) -P data -nv --no-check-certificate http://www.cl.cam.ac.uk/~mgk25/download/uniset.tar.gz

data/Zeichenreferenz:
		$(WGET) -P data -nv --no-check-certificate http://de.selfhtml.org/html/referenz/zeichen.htm

%/.created:
		-@mkdir $(@D)
		@echo "++ do not delete, managed directory ++" > $@

$(D_LIB)/%.la:		%.lo
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(D_OBJ)/$< \
			-module -avoid-version -bindir $(D_BINCTBL) $(LDLIBS)

%.lo:			cnvtables/%.c
		$(LIBTOOL) --mode=compile $(CC) -DMODULE_LOADABLE $(CFLAGS) -o $(D_OBJ)/$@ -c $<

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

#end

