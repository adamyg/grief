dnl $Id: configure.in,v 1.87 2024/06/15 06:32:27 cvsuser Exp $
dnl Process this file with autoconf to produce a configure script.
dnl -*- mode: Autoconf; tabs: 8; -*-
dnl
dnl Adam Young (c) 1995-2024

AC_REVISION($Revision: 1.87 $)
AC_SUBST([PACKAGE])
AC_INIT([GriefEdit],[3.2.3],[https://github.com/adamyg/grief])
AC_PREREQ([2.69])
PACKAGE="gr"

AC_CONFIG_SRCDIR([include/edheaders.h])
AC_CONFIG_HEADERS([include/config.h:include/config.hin])
AC_CONFIG_MACRO_DIR([m4])

AC_MSG_RESULT([-])
AC_MSG_RESULT([- You may set the CC/CXX and CFLAGS/CXXFLAGS environment variables prior running this])
AC_MSG_RESULT([- to predetermine the C and C++ compilers and associated options used.])
AC_MSG_RESULT([-])

AC_CANONICAL_TARGET
AC_CANONICAL_BUILD
CF_CANONICAL_HOST
AC_PROG_MAKE_SET
AC_EXEEXT

LT_INIT([dlopen win32-dll])

AC_SUBST([LIBTOOL_DEPS])
AC_SUBST([LT_OBJDIR])
LT_INIT
LT_OBJDIR="$lt_cv_objdir"
LIBTOOL='/bin/bash $(top_builddir)/libtool'

AC_SUBST(PROGS)

# Restore CFLAGS/CXXFLAGS.
# We MUST set the flags before we call autoconf compiler configuration macros,
# because if we don't, they set CFLAGS to no optimization and -g, which isn't what we want.

AC_PROG_CC([gcc cc clang])
AC_PROG_CXX([g++ CC c++ clang++])
AX_COMPILER_VENDOR
AX_COMPILER_VERSION
CFLAGS=${ac_env_CFLAGS_value}
CXXFLAGS=${ac_env_CXXFLAGS_value}

AC_PROG_CPP
AC_SUBST(CPPDEP)
CPPDEP=${CPPDEP-"gcc -MM"}

AC_SUBST([ABS_ROOT])
ABS_ROOT="`pwd`/"

AC_CHECK_PROG(CP,cp,cp)
AC_CHECK_PROG(MV,mv,mv)
AC_CHECK_PROG(RM,rm,rm)
AC_CHECK_PROG(RMDIR,rmdir,rmdir)
AC_PROG_MKDIR_P

AC_PATH_PROG(SED,sed,sed)
AC_PATH_PROG(TAR,tar,tar)
AC_PATH_PROG(PERL,perl,perl)
AC_PATH_PROG(GREP,egrep,egrep)
AC_PATH_PROG(NROFF,nroff,nroff)
AC_PATH_PROG(TROFF,troff,troff)
AC_PATH_PROG(RANLIB,ranlib,echo)
AC_PATH_PROG(WGET,wget,wget)

AC_SUBST(LIBPROGS)
AC_SUBST(EXTRA_CFLAGS)
AC_SUBST(EXTRA_CXXFLAGS)
AC_SUBST(CWARN)
AC_SUBST(CXXWARN)
AC_SUBST(CINCLUDE)
AC_SUBST(CXXINCLUDE)

AC_SUBST(LDLIBS)
AC_SUBST(EXTRALIBS)

AC_SUBST(TOOLCHAIN)
AC_SUBST(TOOLCHAINEXT)
TOOLCHAIN=`basename "${CC}"`
TOOLCHAINEXT=".${TOOLCHAIN}"

EXTRA_CFLAGS=""
EXTRA_CXXFLAGS=""
CWARN=""
CXXWARN=""
CINCLUDE=""
CXXINCLUDE=""

LDLIBS=
EXTRALIBS=

AC_ARG_WITH(gcc,
	[  --with-gcc              force use of gcc for compilation],
	with_gcc=1)
if test -z "$with_gcc" ; then
	CC=${CC-cc}
else
	CC="gcc"
fi
if test "x$CC" = "xgcc"; then
	AC_ARG_WITH(warnings,
	[  --with-warnings         enable verbose warnings (gcc only)],
			with_wall=1)
	if test "x$with_wall" = "x1"; then
		AC_MSG_RESULT([enabling verbose gcc warnings])
		CF_GCC_WARNINGS
	fi
fi

CF_GCC_VERSION
CF_GCC_ATTRIBUTES
CF_C_INLINE(yes,1200)
CF_WARNING_UNUSED_RESULT
CF_LDMAPFILE

AC_MSG_CHECKING(whether to enable 8bit handling)
AC_ARG_WITH(8bit,
	[  --with-8bit             enable full 8bit display],
			[with_8bit=$withval],
			[with_8bit=no])
AC_MSG_RESULT($with_8bit)
if test "x$with_8bit" = "xyes"; then
	AC_DEFINE(HAVE_EIGHTBIT, 1,
			[Define to enable 8bit character support])
fi

AC_MSG_CHECKING(whether to enable float-point maths)
AC_ARG_WITH(floating,
	[  --with-float            enable floating point macro support (default=yes)],
	[with_floating=$withval],
	[with_floating=yes])
AC_MSG_RESULT($with_floating)
if test "x$with_floating" = "xno"; then
	AC_DEFINE(NO_FLOAT_MATH, 1,
			[Define to disable float maths functions])
fi

BUILD_CONTRIB=0
AC_SUBST(BUILD_CONTRIB)
AC_MSG_CHECKING(whether to enable contrib components)
with_contribdefault=no
	case $host_os in
	ming*)
		with_contribdefault=yes;;
	esac
AC_ARG_WITH(contrib,
	[  --with-contrib          enable contrib components (default=$with_contribdefault)],
	[case "$withval" in
		yes)  with_contrib=yes;;
		no)   with_contrib=no;;
		*)    AC_MSG_ERROR(bad value ${withval} for --with-contrib);;
	esac],[
	AC_DEFINE(BUILD_CONTRIB,1)
	with_contrib=$with_contribdefault])
AC_MSG_RESULT($with_floating)

dnl
dnl Types
dnl
AC_TYPE_LONG_LONG_INT
AC_TYPE_UNSIGNED_LONG_LONG_INT

AC_CHECK_HEADERS([unistd.h], [],
	[AC_MSG_ERROR(system headers not found; unable to continue)])

AC_CHECK_HEADERS(endian.h machine/endian.h arpa/nameser_compat.h)
AC_C_BIGENDIAN(
	[AC_DEFINE(IS_BIG_ENDIAN, 1, [big endian])],
	[AC_DEFINE(IS_LITTLE_ENDIAN, 1, [little endian])],
	[AC_DEFINE(IS_UNKOWN_ENDIAN, 1, [unknown])],
	[AC_DEFINE(IS_UNIVERSAL_BUILD, 1, [universal])])

AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(void *)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(double)
AC_CHECK_SIZEOF(long long)

dnl If stdint.h or inttypes.h does not define the given type, then define a
dnl suitable unsigned type of the correct size.
dnl
dnl     [u]intmax_t
dnl             The C99 intmax_t and uintmax_t types are capable of representing any
dnl             value representable by any other integer types of the same signedness.
dnl
dnl     [u]intptr_t
dnl             Datatype suitable to store either a integer or pointer.
dnl
AC_CHECK_HEADERS( \
	inttypes.h \
	stdint.h )
AC_TYPE_INT8_T
AC_TYPE_INT16_T
AC_TYPE_INT32_T
AC_TYPE_INTMAX_T
AC_TYPE_INTPTR_T

AC_TYPE_UINT8_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINTMAX_T
AC_TYPE_UINTPTR_T

dnl Checks for system services
dnl
dnl     AC_SYS_LARGEFILE
dnl             Arrange for 64-bit file offsets.
dnl
dnl             Large-file support can be disabled by configuring with the
dnl             --disable-largefile option.
dnl
dnl             Applications should be tested with >32bit offsets, including
dnl             printf of offset values.
dnl
dnl     AC_SYS_LONG_FILENAMES
dnl             Support file-names greater then 14 characters.
dnl
AC_SYS_LARGEFILE
AC_SYS_LONG_FILE_NAMES
CF_MIXEDCASE_FILENAMES
CF_PATHSEP

AC_CHECK_HEADERS(sys/sendfile.h)
AC_CHECK_FUNCS(sendfile)
AC_CHECK_HEADERS(sys/prctl.h)
AC_CHECK_FUNCS(prctl)

dnl regex
LIBREGEX=""
AC_SUBST(LIBREGEX)
AC_MSG_CHECKING(whether to enable librexgex POSIX regular expression; otherwise libc)
AC_ARG_WITH(regex,
	[  --with-regex            use libregex],
			[with_libregex=$withval],
			[with_libregex=no])
AC_MSG_RESULT($with_libregex)
AC_CHECK_HEADERS(regex.h)
if test "$with_regex" = yes ; then
	AC_CHECK_LIB(regex,regcomp,[
		LIBREGEX=['-lregex']
		],AC_MSG_WARN(cannot link with libregex; libc assumed))
fi

dnl compression libraries
dnl     libz
dnl     liblzma
dnl     libbz2
dnl
CF_WITH_LIBZ
CF_WITH_LIBLZMA
CF_WITH_LIBBZ2

dnl terminal interface
dnl
LIBTERM_CHECK_CONFIG()

dnl third-party libraries
dnl     libicu
dnl     libapriconv
dnl     libaprutil
dnl     libiconv/libcharset
dnl     libcharudet     (Mozilla universal character detector)
dnl     libenca
dnl     libmagic and optional libz
dnl     libguess        (www.atheme.org)
dnl     lib[15~ICONVintl
dnl     libcurl
dnl     libltdl
dnl     liberty
dnl     libbfd
dnl
LIBMALLOC_CHECK_CONFIG()
LIBSPELL_CHECK_CONFIG()

CF_WITH_LIBICU(3)
CF_WITH_LIBAPRICONV
AC_CHECK_LIB(aprutil,main)
CF_WITH_LIBICONV
dnl CF_WITH_LIBUTF8

CF_WITH_LIBENCA
CF_WITH_LIBMAGIC
AC_CHECK_LIB(guess,libguess_determine_encoding, [LIBGUESS=['-lguess']])
AC_CHECK_HEADERS(libguess/libguess.h)
AC_CHECK_HEADERS(libguess.h)

AC_CHECK_HEADERS(dlfcn.h)
AC_CHECK_LIB(dl, dladdr, [
	AC_DEFINE(HAVE_DLADDR, 1,
		[Define if we have dladdr])
	CF_ADD_EXTRALIBS("-ldl")
	])
AC_CHECK_FUNCS(dlvsym dlopen_preflight)

AC_CHECK_LIB(ltdl, lt_dlinit, [
	AC_DEFINE(HAVE_LIBLTDL, 1,
		[Define to enable libltdl support])
	AC_CHECK_HEADERS(ltdl.h)
	CF_ADD_EXTRALIBS("-lltdl")
	])

AC_CHECK_LIB(iberty, cplus_demangle, [
	AC_DEFINE(HAVE_LIBIBERTY, 1,
		[Define to enable liberty support])
	AC_DEFINE(HAVE_CPLUS_DEMANGLE, 1,
		[Whether or not we have to demangle names])
	AC_CHECK_HEADERS(libiberty.h demangle.h)
	CF_ADD_EXTRALIBS("-liberty")
	])

CF_CHECK_LIBBFD

AX_CHECK_OPENSSL([
	AC_DEFINE(HAVE_OPENSSL, 1,
		[Define to enable openssl support])
	AC_CHECK_HEADERS(openssl/crypto.h)
	AC_CHECK_HEADERS(openssl/ssl.h)
	LIBOPENSSL="$OPENSSL_LIBS"
	],[
	AC_MSG_RESULT(["libopenssl not found"])
	LIBOPENSSL=""
	])
AC_SUBST([LIBOPENSSL])

LIBCURL_CHECK_CONFIG([yes], [7.15.1], [
	if test "$libcurl_protocol_FTP" != yes; then
		AC_MSG_RESULT(["we need libcurl with support for FTP protocol."])
	fi
	], [AC_MSG_RESULT(["libcurl not found"])])

dnl CF_WITHPCRE
dnl CF_WITHTRE

CF_WITH_LIBCLANG

dnl
dnl Check for mouse support
dnl
mouse_lib="none"
AC_MSG_CHECKING(whether to enable mouse handling)
AC_ARG_WITH(mouse,
	[  --with-mouse            enable mouse support],
			[with_mouse=$withval],
			[with_mouse=no])
AC_MSG_RESULT($with_mouse)
if test "$with_mouse" = yes ; then
	AC_DEFINE(HAVE_MOUSE, 1,
			[Define to enable mouse support])
	mouse_lib="xterm only"
fi

AC_MSG_CHECKING(whether to enable gpm mouse support)
AC_ARG_WITH(gpm,
	[  --with-gpm              use gpm mouse library],
			[with_gpm=$withval],
			[with_gpm=no])
AC_MSG_RESULT($with_gpm)
AC_CHECK_HEADERS(gpm.h)
if test "$with_gpm" = yes ; then
	AC_CHECK_LIB(gpm,Gpm_Open,[
		CF_ADD_EXTRALIBS("-lgpm")
		AC_DEFINE(HAVE_LIBGPM, 1,
			[Define to enable gpm mouse support])
		AC_CHECK_HEADERS(gpm.h)
		mouse_lib="gpm and xterm"
	],AC_MSG_WARN(cannot link with gpm library, missing or maybe old))
fi

AC_SUBST(CDEBUG)
AC_SUBST(CXXDEBUG)
AC_SUBST(CRELEASE)
AC_SUBST(CXXRELEASE)
AC_SUBST(LDDEBUG)
AC_SUBST(LDRELEASE)

AC_ARG_WITH(nodebug,
	[  --without-debug         compile without debugging information],
			[without_debug=$withval],
			[without_debug=no])
if test "$without_debug" = yes ; then
	CDEBUG=""
	CXXDEBUG=""
	LDDEBUG=""
else
	CDEBUG="-g -Og"
	CXXDEBUG="-g -Og"
	LDDEBUG="-g -Og"
fi

AC_ARG_WITH(gdbdebug,
	[  --with-gdbdebug         compile with GDB debugging information],
			[with_gdbdebug=$withval],
			[with_gdbdebug=no])
if test "$with_debug" = yes ; then
	CDEBUG="-ggdb -0g"
	CXXDEBUG="-ggdb -Og"
	LDDEBUG="-ggdb -Og"
fi

AC_ARG_WITH(full_optimise,
	[  --with-full-optimise    compile with full optimization],
			[with_full_optimise=$withval],
			[with_full_optimise=no])
if test "$with_full_optimise" = yes ; then
	CRELEASE="-O2 -DNDEBUG"
	CXXRELEASE="-O2 -DNDEBUG"
	LDRELEASE="-O2"
else
	CRELEASE="-O1 -DNDEBUG"
	CXXRELEASE="-O1 -DNDEBUG"
	LDRELEASE="-O1"
fi

AC_MSG_CHECKING(whether to enable runtime assertions)
AC_ARG_WITH(assert,
	[  --with-assert           generate assertion code (default=yes)],
			[with_assert=$withval],
			[with_assert=yes])
AC_MSG_RESULT($with_assert)
if test "$with_assert" = no ; then
	AC_DEFINE(HAVE_NOASSERTS, 1,
			[Define to disable assertions])
	if test -n "$GCC" ; then
		AC_DEFINE([NDEBUG], 1, [disable debug.])
		CFLAGS="$CFLAGS -DNDEBUG"
		CXXFLAGS="$CXXFLAGS -DNDEBUG"
	fi
fi

dnl
dnl Checks for programs.
dnl     @AR@, @LN@, @AWK@
dnl     @LEX@, @YACC@ and @BISON@
dnl
AC_PROG_INSTALL
AC_PATH_PROG([AR],[ar],[ar])
AC_PROG_LN_S
AC_PROG_AWK

AC_CHECK_PROG(PERL_CHECK,perl,yes)
if test x"$PERL_CHECK" != x"yes" ; then
	AC_MSG_ERROR([couldn't locate perl; make sure it's installed and in your path])
fi
m4_version_prereq([2.70],
	[AC_PROG_LEX(noyywrap)],
	[AC_PROG_LEX])
if test "$LEX" != "flex"; then
	AC_MSG_WARN([couldn't locate flex; make sure it's installed and in your path])
	AS_ECHO("")
	AS_ECHO("You should only need it if you modified a '.l' file.")
	AS_ECHO("You may want to install the Fast Lexical Analyzer package:")
	AS_ECHO("")
	AS_ECHO("  <https://github.com/westes/flex>")
	AS_ECHO("")
	AC_MSG_ERROR([flex missing])
fi
AC_PROG_YACC
if test "$YACC" != "bison -y"; then
	if test "$YACC" != "byacc"; then
		if test "$YACC" != "yacc"; then
			AC_MSG_WARN([couldn't locate bison/byacc; make sure it's installed and in your path])
			AS_ECHO("")
			AS_ECHO("You should only need it if you modified a '.y' file."])
			AS_ECHO("You may want to install the either byacc or the bison package:"])
			AS_ECHO("")
			AS_ECHO("     <https://invisible-island.net/byacc>")
			AS_ECHO("  or <https://www.gnu.org/software/bison/>")
			AS_ECHO("")
			AC_MSG_ERROR([bison/byacc missing])
		fi
	fi
fi
AC_PATH_PROG(BISON,bison,bison)

dnl
dnl System libraries.
dnl
AC_CHECK_LIB(c_s,main)
AC_SUBST([LIBM])
if test "x$with_floating" != "xno"; then
	CF_NEED_LIBM(LIBM)
fi

AC_CHECK_LIB(socket,main)
AC_CHECK_LIB(inet,main)
AC_CHECK_LIB(nsl,main)
AC_CHECK_LIB(posix,main)
AC_CHECK_LIB(PW,main)
AC_CHECK_LIB(dir,main)
AC_CHECK_LIB(x,main)

AC_SEARCH_LIBS([strerror],[cposix])
CF_WITH_THREADS

dnl
dnl Misc libraries.
dnl
dnl     libarchive
dnl     libexplain
dnl     yacc/bison
dnl
CF_WITH_LIBARCHIVE

AC_CHECK_HEADERS(libexplain/libexplain.h)
AC_CHECK_HEADERS(libexplain.h)
AC_SUBST(LIBEXPLAIN)
AC_CHECK_LIB(explain,explain_open,[LIBEXPLAIN="-lexplain"],[LIBEXPLAIN=""])

AC_SUBST(LIBYACC)
AC_CHECK_LIB(y,main,[LIBYACC="-ly"],[LIBYACC=""])

dnl
dnl Checks for header files.
dnl
AC_HEADER_STDC
AC_CHECK_INCLUDES_DEFAULT
AC_PROG_EGREP

AC_HEADER_DIRENT
AC_CHECK_HEADERS(direct.h)
AC_HEADER_SYS_WAIT
AC_HEADER_STAT
AC_CHECK_HEADERS(time.h sys/time.h utime.h sys/utime.h)

AC_STRUCT_TM
AC_STRUCT_TIMEZONE
CF_ENVIRON

AC_CHECK_HEADERS(stdarg.h)
CF_VA_COPY

AC_CHECK_HEADERS( \
	sys/types.h sys/cdefs.h sys/param.h sys/bsdtypes.h \
	sys/ioctl.h sys/ioctl_compat.h sys/kd.h \
	sys/select.h sys/socket.h \
	sys/stat.h sys/statfs.h sys/statvfs.h sys/vfs.h \
	stdlib.h stdio.h limits.h \
	stddef.h float.h \
	sys/utsname.h \
	sys/resource.h \
	fcntl.h \
	errno.h \
	poll.h \
	io.h \
	locale.h \
	memory.h strings.h \
	process.h \
	pwd.h \
	libgen.h )

dnl Argument processing
AC_CHECK_HEADERS(getopt.h argz.h)
AC_CHECK_FUNCS(getopt getopt_long)
AC_CHECK_FUNCS(getsubopt)
AC_DEFINE([HAVE_STRUCT_OPTION], 1, [struct option])

dnl see: feature_test_macros (linux/glibc-library specific header)
AC_CHECK_HEADERS( \
	features.h )

AC_CHECK_HEADERS( \
	fts.h err.h vis.h )

dnl C99 headers
AC_CHECK_HEADERS( \
	fenv.h )

dnl C1X headers
AC_CHECK_HEADERS( \
	stdalign.h \
	stdatomic.h \
	threads.h )

dnl Terminal specific headers
AC_CHECK_HEADERS( \
	sys/at_ansi.h \
	machine/console.h \
	sgtty.h \
	termio.h \
	termios.h)

dnl Signal support
CF_TYPE_SIGACTION
AC_CHECK_HEADERS( \
	signal.h )
AC_CHECK_FUNCS(\
	sigsetmask \
	siginterrupt \
	sigaction \
	sigfillset \
	strsignal )

dnl
dnl Checks for typedefs, structures, and compiler characteristics.
dnl
dnl     AC_C_CONST -            defunct
dnl     AC_C_VOLATILE -         defunct
dnl
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
CF_TYPE_SSIZE_T
AC_TYPE_UID_T
AC_CHECK_TYPE(gid_t, int)
AC_CHECK_TYPE(u_char, unsigned char)

dnl Wide character support
AC_CHECK_HEADERS(wchar.h wctype.h)
AC_CHECK_FUNCS(mbrtowc wcrtomb wcscmp wcscpy wcslen wctomb wmemcmp wmemmove wmemcpy wcwidth)

dnl Checks for library functions
dnl
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_GETPGRP

CF_FUNC_ISASCII
CF_FUNC_ISBLANK
CF_FUNC_ISCSYM

CF_LANGINFO_CODESET
CF_FUNC_MKSTEMP
CF_FUNC_MEMMOVE
CF_FUNC_VASPRINTF

AC_CHECK_HEADERS(wait.h sys/wait.h)
AC_FUNC_FORK
AC_CHECK_HEADERS(spawn.h)
AC_CHECK_FUNCS(\
	waitpid wait3 wait4 \
	posix_spawn posix_spawnp)
AC_FUNC_WAIT3

AC_FUNC_STRFTIME
AC_FUNC_VPRINTF

dnl TTY interface
AC_CHECK_HEADERS(pty.h grp.h stropts.h)
AC_CHECK_HEADERS(sys/stream.h sys/termios)
AC_CHECK_HEADERS(sys/ptem.h, [], [], [
#ifdef HAVE_SYS_STREAM_H
#include <sys/stream.h>     /* Solaris 8, sys/stream.h is a prerequisite. */
#endif
])
AC_CHECK_FUNCS(posix_openpt, , [AC_CHECK_FUNCS(getpt)])
AC_CHECK_FUNCS(ptsname_r, , [AC_CHECK_FUNCS(ptsname)])
AC_CHECK_FUNCS(grantpt, , [AC_CHECK_LIB(pt, grantpt)])
AC_CHECK_FUNCS(unlockpt, , [AC_CHECK_LIB(pt, unlockpt)])

dnl libX11 and friends
CF_WITH_LIBX11

dnl replacing lstat with statlstat on sco makes it more portable between sco clones
AC_CHECK_FUNCS(statlstat)

dnl library functions.
CF_MALLOC_OPT

AC_FUNC_STRTOD
AC_FUNC_STRTOLD
AC_CHECK_FUNCS(\
	bcmp bzero memcmp memset memmove \
	vprintf snprintf vsnprintf _vsnprintf \
	asprintf vasprintf \
	getlogin getexecname \
	fgetpos fsetpos fgetln \
	getline getdelim \
	truncate ftruncate \
	rename \
	select poll \
	setlocale \
	link symlink \
	stat lstat \
	chown chroot \
	matherr)
AC_FUNC_FSEEKO

AC_CHECK_FUNCS(\
	strchr strrchr strdup \
	stricmp strcasecmp __strcasecmp strncasecmp __strncasecmp strcasestr \
	strverscmp __strverscmp \
	strtoul strtof strtoll strtold \
	strftime \
	strerror \
	strnlen strndup \
	strvis strnvis strvisx strunvix unvis)
CF_CHECK_STRLCPY
CF_CHECK_STRLCAT

AC_CHECK_DECL([issetugid], \
	AC_CHECK_FUNC([issetugid], [AC_DEFINE([HAVE_ISSETUGID], [1], [issetugid is available])]))
AC_CHECK_FUNCS(\
	getuid geteuid getgid getegid)
AC_CHECK_FUNCS(\
	setsid setpgrp setpgid)

AC_CHECK_FUNCS(\
	strtok_r strerror_l strerror_r \
	rand_r \
	pread pwrite \
	getlogin_r getpwnam_r getpwuid_r \
	asctime_r ctime_r gmtime_r localtime_r \
	timegm)

AC_CHECK_FUNCS(\
	opendir readdir_r)

AC_CHECK_FUNCS(\
	mergesort \
	heapsort \
	versionsort)

AC_CHECK_FUNCS(\
	round \
	neatbyintf)

dnl BSD extensions
AC_CHECK_FUNCS(\
	index rindex \
	setproctitle \
	setprocname getprocname \
	err \
	mkdtemp \
	pledge \
	strtonum strcasestr strsep \
	stringlist \
	reallocarray)

AC_CONFIG_FILES([\
	Makefile \
	include/edpackage.h \
	libllist/Makefile \
	libmisc/Makefile \
	libsplay/Makefile \
	libmalloc/Makefile \
	libvfs/Makefile \
	libbsdio/Makefile \
	libbsddb/Makefile \
	libbsdfetch/Makefile \
	libtrie/Makefile \
	libterm/Makefile \
	libteken/Makefile \
	libonigrx/Makefile \
	libtre/Makefile \
	libchartable/Makefile \
	libwidechar/Makefile \
	libcharudet/Makefile \
	libduktape/Makefile \
	gr/Makefile \
	gm/Makefile \
	grcpp/Makefile \
	grmandoc/Makefile \
	grunch/Makefile \
	hlpdoc/Makefile \
	macsrc/Makefile \
	util/Makefile])

case $host_os in
mingw*)
	AC_CONFIG_FILES([libw32/Makefile])
	;;
esac

if test "x$with_contrib" = "xyes"; then
AC_CONFIG_FILES([\
	contrib/Makefile \
	contrib/makedepend/Makefile \
	contrib/libregex/Makefile \
	contrib/libbzip2/Makefile \
	contrib/libz/Makefile \
	contrib/liblzma/Makefile \
	contrib/libmagic/Makefile \
	contrib/byacc/Makefile \
	contrib/flex/Makefile \
	contrib/libguess/Makefile \
	contrib/libarchive/Makefile \
	contrib/hunspell/Makefile \
	contrib/extags/Makefile])
fi

AX_RECURSIVE_EVAL([\$prefix],  [var_prefix])
AX_RECURSIVE_EVAL([\$datadir], [var_datadir])
AX_RECURSIVE_EVAL([\$bindir],  [var_bindir])

AC_MSG_RESULT([-])
AC_MSG_RESULT([-  Configuration:])
AC_MSG_RESULT([-])
AC_MSG_RESULT([-         Compiler: $CC / $CXX])
AC_MSG_RESULT([-           Depend: $CPPDEP])
AC_MSG_RESULT([-           CFLAGS: $CFLAGS $OPENSSL_INCLUDES $EXTRA_CFLAGS $CWARN])
AC_MSG_RESULT([-                     Debug:$CDEBUG, Release:$CRELEASE])
AC_MSG_RESULT([-         CXXFLAGS: $CXXFLAGS $EXTRA_CPPFLAGS $CXXWARN])
AC_MSG_RESULT([-                     Debug:$CXXDEBUG, Release:$CXXRELEASE])
AC_MSG_RESULT([-          LDFLAGS: $OPENSSL_LDFLAGS $LDFLAGS])
AC_MSG_RESULT([-     Preprocessor: $EXTRA_CPPFLAGS $LIBCURL_CPPFLAGS])
AC_MSG_RESULT([-    Mouse support: ${mouse_lib}])
AC_MSG_RESULT([-   Termap support: ${termlib_name}])
AC_MSG_RESULT([-    Spell Support: $LIBSPELL])
AC_MSG_RESULT([-       Conversion: $LIBICU $LIBAPRICONV $LIBICONV])
AC_MSG_RESULT([-        Detection: $LIBENCA $LIBCHARUDET $LIBGUESS $LIBMAGIC])
AC_MSG_RESULT([-         Security: $LIBOPENSSL])
AC_MSG_RESULT([-      Compression: $LIBBZ2 $LIBLZMA $LIBZ])
AC_MSG_RESULT([-   Other Features: $LIBCURL $LIBARCHIVE $LIBEXPLAIN $LIBREGEX])
AC_MSG_RESULT([-        Libraries: $LIBS $LIBX11 $LIBTHREAD])
AC_MSG_RESULT([-            Extra: $LIBCLANG $LIBM $EXTRALIBS])
AC_MSG_RESULT([-        Allocator: $LIBMALLOC])
AC_MSG_RESULT([-             Yacc: $LIBYACC])
AC_MSG_RESULT([-])
AC_MSG_RESULT([-  Installation:])
AC_MSG_RESULT([-])
dnl AC_MSG_RESULT([-           prefix: $prefix])
dnl AC_MSG_RESULT([-   prefix_default: $ac_default_prefix])
dnl AC_MSG_RESULT([-          datadir: $datadir])
dnl AC_MSG_RESULT([-      datarootdir: $datarootdir])
dnl AC_MSG_RESULT([-])
AC_MSG_RESULT([-           prefix: $var_prefix])
AC_MSG_RESULT([-          datadir: $var_datadir])
AC_MSG_RESULT([-])
AC_MSG_RESULT([-              BINPATH=$var_bindir])
AC_MSG_RESULT([-              GRPATH=$var_datadir/$PACKAGE/macro])
AC_MSG_RESULT([-              GRHELP=$var_datadir/$PACKAGE/help])
AC_MSG_RESULT([-])

echo ""
echo " Review the options above for accuracy, to modify see --help for details."
echo " For example, a user local installation can set using the --prefix option."
echo ""
echo "      '${0##*/} --prefix=${HOME}/grief'"
echo ""
echo " Once they look okay, execute to build:"
echo ""
echo "      'make release'              - build software."
echo ""
echo " Installation, one of the follow dependent on location:"
echo ""
echo "      'sudo make release install' - install for common/system usage; or"
echo "   or 'make release install'      - local installation."
echo ""
echo " Optionally after installation:"
echo ""
echo "      'make release clean'        - remove build tree."
echo ""

dnl Keep copy of working definitions
cp confdefs.h acdefines.h

AC_OUTPUT

dnl end
