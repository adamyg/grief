# $Id: Makefile.in,v 1.9 2021/04/11 15:15:58 cvsuser Exp $
# libduktape makefile.
#
#
# Copyright (c) 2018 - 2021, Adam Young.
# All rights reserved.
#
# This file is part of the GRIEF Editor.
#
# The GRIEF Editor is free software: you can redistribute it
# and/or modify it under the terms of the GRIEF Editor License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The GRIEF Editor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@
RC=		@RC@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/objects@TOOLCHAINEXT@/$(BUILD_TYPE)/libduktape
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@ $(CWALL)
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
CXXFLAGS=	@CXXFLAGS@
CXXDEBUG=	@CXXDEBUG@
ifeq ("$(CXXDEBUG)","")
CXXDEBUG=	$(CDEBUG)
endif
CXXRELEASE=	@CXXRELEASE@
ifeq ("$(CXXRELEASE)","")
CXXRELEASE=	$(CRELEASE)
endif
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. -I$(D_INC) @CINCLUDE@
##ifeq ("mingw32","@build_os@")
##CINCLUDE+=	-I../libw32
##endif

CEXTRA=		@DEFS@

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXRELEASE) $(CWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXDEBUG) $(CWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
ifeq (gcc,$(findstring gcc,$(CC)))
ifeq ("linux","@build_os@")
LDFLAGS+=	-rdynamic
endif
endif

LDLIBS=		-L$(D_LIB) @LDLIBS@ @LIBS@ @LIBM@ @LIBMALLOC@ @EXTRALIBS@
##ifeq ("mingw32","@build_os@")
##LDLIBS+=	-lw32 -lshlwapi -lshell32 -lpsapi -lole32 -luuid -lgdi32 -luserenv -lnetapi32 -ladvapi32 -lWs2_32
##endif

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

DUKTAPELIB=		$(D_LIB)/$(LP)duktape_static$(A)
DUKTAPEDLL=		$(D_LIB)/$(LP)duktape.la
DUK=			$(D_BIN)/duk$(E)

VERSION=	2.6.0
VERSIONSPEC=	$(subst .,:,$(VERSION))
VERSION_1	=$(word 1,$(subst ., ,$(VERSION)))
VERSION_2	=$(word 2,$(subst ., ,$(VERSION)))
VERSION_3	=$(word 3,$(subst ., ,$(VERSION)))

VPATH=		./cmdline

LIBSOURCES=	\
	duktape.c

DUKSOURCES=	\
	duk_cmdline.c \
	duk_cmdline_lowmem.c

LIBOBJS=\
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(LIBSOURCES)))

DLLOBJS=\
	$(subst $(O),.lo,$(LIBOBJS))
ifeq ("mingw32","@build_os@")
DLLOBJS+=	$(D_OBJ)/duktape_res.o
else ifeq ("duktape","@build_os@")
DLLOBJS+=	$(D_OBJ)/duktape.res
endif

DUKOBJS=\
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(DUKSOURCES)))


OBJS=		$(LIBOBJS) $(DLLOBJS)
LIBS=		$(DUKTAPELIB) $(DUKTAPEDLL)
TSKS=		$(DUK)


#########################################################################################
# Rules

.PHONY:			build release debug
build:			version.h $(LIBS) $(TSKS)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

$(DUKTAPELIB):		CEXTRA += -DDUKTAPE_STATIC_BUILD
$(DUKTAPELIB):		Makefile $(D_OBJ)/.created $(LIBOBJS)
		$(RM) $(RMFLAGS) $@
		$(AR) $(ARFLAGS) $@ $(LIBOBJS)
		$(RANLIB) $@

ifeq ("yes","@ISWIN32@")
$(DUKTAPEDLL):		CEXTRA += -DDUKTAPE_DLL_BUILD
$(DUKTAPEDLL):		DLLDEF = -export-symbols libduktape.def
endif
$(DUKTAPEDLL):		MAPFILE=$(basename $@).map
$(DUKTAPEDLL):		Makefile $(D_OBJ)/.created $(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(DLLDEF) $(DLLOBJS) $(LDLIBS) @LDMAPFILE@

$(DUK):		MAPFILE=$(basename $@).map
$(DUK):			Makefile $(DUKOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(DUKOBJS) $(DUKTAPEDLL) $(LDLIBS) @LDMAPFILE@

version.h:		Makefile
		@sh -c '\
echo // Auto-generated by Makefile >$@; \
echo \#define DUKTAPE_VERSION \\\"$(VERSION)\\\" >>$@; \
echo \#define DUKTAPE_VER_MAJOR $(VERSION_1) >>$@; \
echo \#define DUKTAPE_VER_MINOR $(VERSION_2) >>$@; \
echo \#define DUKTAPE_VER_REVISION $(VERSION_3) >>$@; \
'

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not create" > $@

clean:
		-@$(LIBTOOL) --mode=clean $(RM) $(DUKTAPEDLL) $(DLLOBJS) >/dev/null 2>&1
		-@$(RM) $(RMFLAGS) $(BAK) $(DUKTAPELIB) $(CLEAN) $(XCLEAN) >/dev/null 2>&1
		-@$(RM) $(RMFLAGS) $(LIBOBJS) >/dev/null 2>&1

# XXX: open-watcom debug breaks due to the module size, must filter out -hw

$(D_OBJ)/%$(O):		%.c
		$(CC) $(filter-out -hw -gw,$(CFLAGS)) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(filter-out -hw -gw,$(CFLAGS)) -o $@ -c $<

$(D_OBJ)/%.res:		%.rc
		$(RC) -fo $@ $<

$(D_OBJ)/%_res.o:	%.rc
		$(RC) -o $@ $<

#end
