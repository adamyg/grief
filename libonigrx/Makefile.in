# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.16 2024/05/19 17:04:25 cvsuser Exp $
# libonigrx - regular expression makefile.
#
#
# Copyright (c) 1998 - 2024, Adam Young.
# All rights reserved.
#
# This file is part of the GRIEF Editor.
#
# The GRIEF Editor is free software: you can redistribute it
# and/or modify it under the terms of the GRIEF Editor License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The GRIEF Editor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/obj@TOOLCHAINEXT@/$(BUILD_TYPE)/liboginrx
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
ifeq (gcc,$(findstring gcc,$(CC)))
CWARN=		$(filter-out -Wshadow -Wmissing-prototypes -Wsign-compare -Wimplicit-fallthrough, @CWARN@ $(CWALL))
CWARN+=		-Wno-sign-compare -Wno-implicit-fallthrough -Wno-deprecated-non-prototype
else
CWARN=		@CWARN@ $(CWALL)
endif
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@
CEXTRA+=	-DUSE_POSIX_API -DUSE_BINARY_COMPATIBLE_POSIX_API
ifeq ("wcl386","@CC@")
CEXTRA+=	-D__STDC_WANT_LIB_EXT1__=1
endif

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
ifeq (gcc,$(findstring gcc,$(CC)))
ifeq ("linux","@build_os@")
LDFLAGS+=	-rdynamic
endif
endif

LDLIBS=		-L$(D_LIB) @LIBS@ @LIBMALLOC@ @EXTRALIBS@

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf

RMFLAGS=	-f


#########################################################################################
# Targets

ifeq ("yes","@ISWIN32@")
RELIB=		$(D_LIB)/$(LP)onigrx_static$(A)
REDLL=		$(D_LIB)/$(LP)onigrx.la
else
RELIB=		$(D_LIB)/$(LP)onigrx$(A)
endif

VERSION=	6.9.6
VERSIONSPEC=	$(subst .,:,$(VERSION))
REPACKED=	onig-$(VERSION).tgz

RESRC=		./onig-$(VERSION)/src

LIBOBJS=\
	$(D_OBJ)/regcomp$(O)		\
	$(D_OBJ)/regenc$(O)		\
	$(D_OBJ)/regerror$(O)		\
	$(D_OBJ)/regexec$(O)		\
	$(D_OBJ)/regext$(O)		\
	$(D_OBJ)/reggnu$(O)		\
	$(D_OBJ)/regparse$(O)		\
	$(D_OBJ)/regposerr$(O)		\
	$(D_OBJ)/regposix$(O)		\
	$(D_OBJ)/regsyntax$(O)		\
	$(D_OBJ)/regtrav$(O)		\
	$(D_OBJ)/regversion$(O)		\
	$(D_OBJ)/st$(O)			\
	$(D_OBJ)/onig_init$(O)

LIBOBJS+=\
	$(D_OBJ)/ascii$(O) \
	$(D_OBJ)/utf8$(O) \
	$(D_OBJ)/unicode$(O) \
	$(D_OBJ)/utf16_be$(O) $(D_OBJ)/utf16_le$(O) \
	$(D_OBJ)/utf32_be$(O) $(D_OBJ)/utf32_le$(O) \
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(notdir $(wildcard $(RESRC)/iso*.c)))) \
	$(D_OBJ)/euc_jp$(O) $(D_OBJ)/sjis$(O) \
	$(D_OBJ)/euc_tw$(O) $(D_OBJ)/euc_kr$(O) $(D_OBJ)/big5$(O) \
	$(D_OBJ)/gb18030$(O) \
	$(D_OBJ)/koi8_r$(O)  \
	$(D_OBJ)/cp1251$(O) \
	$(D_OBJ)/euc_jp_prop$(O) $(D_OBJ)/sjis_prop$(O) \
	$(D_OBJ)/unicode_unfold_key$(O) $(D_OBJ)/unicode_fold1_key$(O) \
	$(D_OBJ)/unicode_fold2_key$(O) $(D_OBJ)/unicode_fold3_key$(O)

DLLOBJS=\
	$(subst $(O),.lo,$(LIBOBJS))
ifeq ("yes","@ISWIN32@")
DLLOBJS+=\
	$(D_OBJ)/dllmain.lo
endif
OBJS=		$(LIBOBJS) $(UTILOBJS)
LIBS=		$(RELIB)
ifeq ("yes","@ISWIN32@")
LIBS+=		$(REDLL)
endif
TSKS=


#########################################################################################
# Rules

.PHONY:			build release debug
all:			source unpacked
unpacked:		$(LIBS) $(TSKS) installinc

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

$(RELIB):		CEXTRA+=-DONIG_EXTERN=extern
$(RELIB):		$(D_OBJ)/.created $(D_OBJ)/enc/.created $(LIBOBJS)
		$(RM) $(RMFLAGS) $@ >/dev/null 2>&1
		$(AR) $(ARFLAGS) $@ $(LIBOBJS)
		$(RANLIB) $@

ifeq ("yes","@ISWIN32@")
$(REDLL):		$(D_OBJ)/.created $(D_OBJ)/enc/.created $(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(DLLOBJS) -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(LDLIBS)
endif

source:			.unpacked.$(VERSION)
		@$(MAKE) unpacked

.unpacked.$(VERSION):	$(REPACKED)
		@echo "do not delete, managed file" > $@
		@echo "unpacking source $(REPACKED)"
		@gzip -c -d $(REPACKED) | tar -xvf -

installinc:
		@echo publishing headers ...
		@-cp $(RESRC)/oniggnu.h ../include
		@-cp $(RESRC)/onigposix.h ../include
		@-cp $(RESRC)/oniguruma.h ../include

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

clean:
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(LIBS) $(OBJS) $(CLEAN) $(XCLEAN) >/dev/null 2>&1

##
$(D_OBJ)/%$(O):		$(RESRC)/%.c
		$(CC) $(CFLAGS) -I$(RESRC) -o $@ -c $<

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -I$(RESRC) -o $@ -c $<

##
$(D_OBJ)/%.lo:		$(RESRC)/%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -I$(RESRC) -DEXPORT=1 -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -I$(RESRC) -DEXPORT=1 -o $@ -c $<

#end

