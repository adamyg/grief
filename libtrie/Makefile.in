# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.11 2024/11/24 15:46:30 cvsuser Exp $
# libtrie - prefix tree
#
#
# Copyright (c) 2022 - 2024, Adam Young.
# All rights reserved.
#
# This file is part of the GRIEF Editor.
#
# The GRIEF Editor is free software: you can redistribute it
# and/or modify it under the terms of the GRIEF Editor License.
#
# Redistributions of source code must retain the above copyright
# notice, and must be distributed with the license document above.
#
# Redistributions in binary form must reproduce the above copyright
# notice, and must include the license document above in
# the documentation and/or other materials provided with the
# distribution.
#
# The GRIEF Editor is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# License for more details.
# ==end==
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

C=		.c
O=		.o
E=
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
LIBTOOL=	@LIBTOOL@

# Configuration

QUIETOUT:=	>/dev/null 2>&1
ifeq ($(VERBOSE),1)
QUIETOUT:=
else ifeq ($(VERBOSE),0)
else ifeq ($(VERBOSE),)
else
$(error VERBOSE: unexpected value 0 or 1 required, $(VERBOSE) given]))
endif

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/obj@TOOLCHAINEXT@/$(BUILD_TYPE)/libtrie
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@ $(CWALL)
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
CXXFLAGS=	@CXXFLAGS@
CXXDEBUG=	@CXXDEBUG@
ifeq ("$(CXXDEBUG)","")
CXXDEBUG=	$(CDEBUG)
endif
CXXRELEASE=	@CXXRELEASE@
ifeq ("$(CXXRELEASE)","")
CXXRELEASE=	$(CRELEASE)
endif
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

ifeq (gcc,$(findstring gcc,$(CC)))
XFLAGS+= 	-Wno-deprecated-non-prototype -Wno-unused-parameter
endif	#gcc

CINCLUDE=	-I$(D_INC) @CINCLUDE@

CEXTRA=		@DEFS@
ifeq ("win32","@build_os@")
CEXTRA+=	-DWIN32
endif

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXRELEASE) $(CXXWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXDEBUG) $(CXXWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) $(LINKLIBS) @LIBS@ @EXTRALIBS@

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

TARGET=		trie_test$(E)
OBJS=\
	$(D_OBJ)/trie_test$(O)

LIBROOT=	trie
LIBOBJS=\
	$(D_OBJ)/trie_create$(O)	\
	$(D_OBJ)/trie_free$(O)		\
	$(D_OBJ)/trie_stack$(O)		\
	$(D_OBJ)/trie_insert$(O)	\
	$(D_OBJ)/trie_insert2$(O)	\
	$(D_OBJ)/trie_prune$(O)		\
	$(D_OBJ)/trie_size$(O)		\
	$(D_OBJ)/trie_search$(O)	\
	$(D_OBJ)/trie_nsearch$(O)	\
	$(D_OBJ)/trie_search_wild$(O)	\
	$(D_OBJ)/trie_search_nwild$(O)	\
	$(D_OBJ)/trie_visit$(O)

LIBRARY=	$(D_LIB)/$(LP)$(LIBROOT)$(A)
TSK=		$(D_BIN)/$(TARGET)

#########################################################################################
# Rules

.PHONY:			build release debug
build:			installinc $(LIBRARY) $(TSK)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

XCLEAN +=	$(basename $(D_BIN)/$(TARGET)).map
$(D_BIN)/$(TARGET):	MAPFILE=$(basename $@).map
$(D_BIN)/$(TARGET):	$(LIBRARY)
$(D_BIN)/$(TARGET):	LINKLIBS=-ltrie
$(D_BIN)/$(TARGET):	$(OBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS) @LDMAPFILE@

$(LIBRARY):		$(D_OBJ)/.created $(LIBOBJS)
		$(RM) $(RMFLAGS) $@
		$(AR) $(ARFLAGS) $@ $(LIBOBJS)
		$(RANLIB) $@

XCLEAN+=	../include/libtrie.h
installinc:		libtrie.h
		@echo publishing headers ...
		@-cp libtrie.h ../include

$(D_OBJ)/.created:
		-@mkdir $(D_OBJ)
		@echo "do not create" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-$(LIBTOOL) --mode=clean $(RM) $(D_BIN)/$(TARGET)
		-@$(RM) $(RMFLAGS) $(LIBRARY) $(LIBOBJS) $(OBJS) $(QUIETOUT)
		-@$(RM) $(RMFLAGS) $(BAK) $(CLEAN) $(XCLEAN) $(QUIETOUT)

$(D_OBJ)/%$(O):		%$(C)
		$(CC) $(CFLAGS) -o $@ -c $<

#end
